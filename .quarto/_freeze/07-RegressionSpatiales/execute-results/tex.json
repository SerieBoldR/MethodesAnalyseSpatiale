{
  "hash": "bda1c42355721f6a624c6ad430ee68e5",
  "result": {
    "engine": "knitr",
    "markdown": "# Introduction aux modèles de régression spatiale {#sec-chap07}\n\nDepuis une trentaine d'années, économètres, épidémiologistes et géographes développent et utilisent abondamment des méthodes de régression intégrant l'espace : modèles économétriques spatiaux, modèles géographiquement pondérés, analyses multiniveaux, etc. L'objectif de ce chapitre est de donner un aperçu de ces méthodes. Nous y décrivons principalement les différents modèles économétriques spatiaux, les modèles généralisés additifs avec une *spline* bivariée sur les coordonnées géographiques et les modèles géographiquement pondérés. Afin d'explorer un plus large éventail de méthodes de régression spatiale, nous vous recommandons la lecture d’un autre ouvrage de la Série *Un grand Bol d'R* intitulé [*Méthodes de régression spatiale : un grand bol d’R*](https://serieboldr.com/RegressionsSpatiales/) [@RBoldAirRegSpatiales].\n\n::: bloc_package\n::: bloc_package-header\n::: bloc_package-icon\n:::\n\n**Liste des *packages* utilisés dans ce chapitre**\n:::\n\n::: bloc_package-body\n-   Pour importer et manipuler des fichiers géographiques :\n    -   `sf` pour importer et manipuler des données vectorielles.\n    -   `raster` et `terra` pour manipuler des données matricielles.\n-   Pour construire des cartes et des graphiques :\n    -   `tmap` est certainement le meilleur *package* pour la cartographie.\n    -   `ggplot2` pour construire des graphiques.\n-   Pour construire des modèles spatiaux :\n    -   `spdep` pour construire des matrices de pondération spatiales et calculer le *I* de Moran.\n    -   `spatialreg` pour construire des modèles économétriques spatiaux.\n    -   `mgcv` pour construire des modèles généralisés additifs avec une *spline* sur les coordonnées géographiques.\n    -   `spgwr` pour construire des régressions géographiquement pondérées.\n:::\n:::\n\nPour décrire les différents modèles, nous proposons d'utiliser le jeu de données spatiales `LyonIris` du *package* `geocmeans`. Ce jeu de données spatiales pour l'agglomération lyonnaise (France) comprend dix variables, dont quatre environnementales (EN) et six socioéconomiques (SE), pour les îlots regroupés pour l'information statistique (IRIS) de l'agglomération lyonnaise (@tbl-datageocmeans et @fig-datacarto).\n\n\n\n\n\n\n::: {#tbl-datageocmeans .cell tbl-cap='Statistiques descriptives du jeu de données LyonIris'}\n::: {.cell-output-display}\n\n\n|           |Nom        |Intitulé                                    | Type | Moy.| E.-T.| Min.|  Max.|\n|:----------|:----------|:-------------------------------------------|:----:|----:|-----:|----:|-----:|\n|Lden       |Lden       |Bruit routier (Lden dB(A))                  |  EN  | 55,6|   4,9| 33,9|  71,7|\n|NO2        |NO2        |Dioxyde d'azote (ug/m^3^)                   |  EN  | 28,7|   7,9| 12,0|  60,2|\n|PM25       |PM25       |Particules fines (PM$_{2,5}$)               |  EN  | 16,8|   2,1| 11,3|  21,9|\n|VegHautPrt |VegHautPrt |Canopée (%)                                 |  EN  | 18,7|  10,1|  1,7|  53,8|\n|Pct0_14    |Pct0_14    |Moins de 15 ans (%)                         |  SE  | 18,5|   5,7|  0,0|  54,0|\n|Pct_65     |Pct_65     |65 ans et plus (%)                          |  SE  | 16,2|   5,9|  0,0|  45,1|\n|Pct_Img    |Pct_Img    |Immigrants (%)                              |  SE  | 14,5|   9,1|  0,0|  59,8|\n|TxChom1564 |TxChom1564 |Taux de chômage                             |  SE  | 14,8|   8,1|  0,0|  98,8|\n|Pct_brevet |Pct_brevet |Personnes à faible scolarité (%)            |  SE  | 23,5|  12,6|  0,0| 100,0|\n|NivVieMed  |NivVieMed  |Médiane du niveau de vie (milliers d'euros) |  SE  | 21,8|   4,9| 11,3|  38,7|\n\n\n:::\n:::\n\n\n\n\n\n\n![Cartographie des variables du jeu de données LyonIris](images/Chap07/FigureDataLyon.png){#fig-datacarto width=\"100%\" fig-align=\"center\"}\n\n## Modèles économétriques spatiaux {#sec-071}\n\n::: bloc_attention\n::: bloc_attention-header\n::: bloc_attention-icon\n:::\n\n**Régression linéaire multiple et modèles économétriques spatiaux**\n:::\n\n::: bloc_attention-body\nDans cette section, nous décrivons uniquement les modèles économétriques spatiaux dont la variable dépendante est continue. Sommairement, ces modèles sont des extensions de la régression linéaire multiple dans laquelle est intégrée l'autocorrélation spatiale. Avant de lire cette section, il faut donc bien maîtriser la régression linéaire multiple. Si ce n'est pas le cas, nous vous invitons vivement à lire le [chapitre suivant](https://serieboldr.github.io/MethodesQuantitatives/07-regressionlineaire.html) [@RBoldAir].\n\nCes deux dernières décennies, plusieurs ouvrages traitant des modèles économétriques spatiaux ont été publiés, surtout en anglais [@lesage2008introduction; @anselin2014modern; @bivand2008applied]. Ils méritent grandement d'être consultés, tout comme l'excellent livre en français de Jean Dubé et Diègo Legros [-@dube2014econometrie].\n:::\n:::\n\n**Pourquoi recourir à des modèles économétriques spatiaux?**\n\nDans un modèle, les résidus ($\\epsilon$) sont la différence entre les valeurs observées ($y_i$) et les valeurs prédites par le modèle ($\\widehat{y_i}$). Une des hypothèses de la régression linéaire multiple est que les observations doivent être indépendantes les unes des autres (*indépendance du terme d'erreur*). Le non-respect de cette hypothèse produit des résultats biaisés, notamment pour les coefficients de régression.\n\nLorsque les observations sont des entités spatiales (polygones, points par exemple), si les résidus du modèle sont autocorrélés spatialement, il y a un problème de dépendance spatiale du modèle. Autrement dit, les observations ne sont pas spatialement indépendantes les unes des autres. Pour vérifier la dépendance spatiale d'un modèle, il suffit de calculer le *I* de Moran sur les résidus du modèle, comme décrit au chapitre 2 ([section @sec-023]).\n\nAutrement dit, un modèle de régression construit avec des données spatiales ne devrait pas avoir des résidus spatialement autocorrélés. Or, les modèles économétriques spatiaux permettent justement d'intégrer l'autocorrélation spatiale de différentes manières afin de s'assurer que l'hypothèse de l'indépendance du terme d'erreur est respectée.\n\n### Bref retour sur la régression linéaire multiple {#sec-0711}\n\nÀ titre de rappel, la régression linéaire multiple permet de prédire et d'expliquer une variable dépendante ($Y$) en fonction de plusieurs variables indépendantes ($X$). L'équation de régression s'écrit alors :\n\n$$\ny_i = \\beta_{0} + \\beta_{1}x_{1i} + \\beta_{2}x_{2i} +\\ldots+ \\beta_{k}x_{ki} + \\epsilon_{i}\n$$ {#eq-regmultiple1}\n\navec :\n\n-   $y_i$, la valeur de la variable dépendante *Y* pour l'observation *i*.\n-   $\\beta_{0}$, la constante, soit la valeur prédite pour *Y* quand toutes les variables indépendantes sont égales à 0.\n-   $k$ le nombre de variables indépendantes.\n-   $\\beta_{1}$ à $\\beta_{k}$, les coefficients de régression pour les variables indépendantes de 1 à *k* ($X_{1}$ à $X_{k}$).\n-   $\\epsilon_{i}$, le résidu pour l'observation de *i*, soit la partie de la valeur de $y_i$ qui n'est pas expliquée par le modèle de régression.\n\nIl existe plusieurs écritures simplifiées de cette équation. Dans le cadre de ce chapitre, nous utilisons la forme matricielle suivante :\n\n$$\ny = X\\beta + \\epsilon\n$$ {#eq-MCO}\n\navec :\n\n-   $y$, un vecteur de dimension $n \\times 1$ pour la variable dépendante, soit une colonne avec *n* observations.\n-   $X$, une matrice de dimension $n \\times (k + 1)$ pour les *k* variables indépendantes, incluant une autre colonne (avec la valeur de 1 pour les *n* observations) pour la constante, d'où $k + 1$.\n-   $\\beta$, un vecteur de dimension $k + 1$, soit les coefficients de régression pour les *k* variables et la constante.\n-   $\\epsilon$, un vecteur de dimension $n \\times 1$ pour les résidus.\n\n**Construction du modèle MCO dans R**\n\nAvec la fonction `lm()`, il est facile de construire un modèle de régression linéaire multiple basé sur la méthode des moindres carrés ordinaires (MCO). Dans le code ci-dessous, la formule de l'équation du modèle est donc `NO2 ~ Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed`. Notez que la variable dépendante et les variables indépendantes sont séparées avec un tilde (`~`). Quant à la fonction `summary(NomDuModèle)`, elle affiche les résultats du modèle.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Appel des différents packages utilisés dans le chapitre\nlibrary(spdep)\n## Construction du modèle\nModele.MCO <- lm(NO2 ~ Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n                 data = LyonIris)\n## Résultats du modèle\nsummary(Modele.MCO)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = NO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet + \n    NivVieMed, data = LyonIris)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-27.733  -4.457  -0.499   3.507  29.160 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 49.43296    2.99550  16.502  < 2e-16 ***\nPct0_14     -0.53352    0.06305  -8.461 2.94e-16 ***\nPct_65      -0.15047    0.05627  -2.674  0.00774 ** \nPct_Img      0.28287    0.05113   5.532 5.12e-08 ***\nPct_brevet  -0.24004    0.03721  -6.451 2.63e-10 ***\nNivVieMed   -0.31625    0.10180  -3.107  0.00200 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.685 on 500 degrees of freedom\nMultiple R-squared:  0.2832,\tAdjusted R-squared:  0.276 \nF-statistic:  39.5 on 5 and 500 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n\n\n\n**Dépendance spatiale du modèle MCO?**\n\nPour vérifier si ce modèle linéaire multiple a un problème de dépendance spatiale, nous calculons le *I* de Moran sur ses résidus avec la fonction `lm.morantest`, puis nous les cartographions.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Matrice de contiguïté selon le partage d'un segment (Rook)\nRook <- poly2nb(LyonIris, queen=FALSE)\nW.Rook <- nb2listw(Rook, zero.policy=TRUE, style = \"W\")\n# Autocorrélation spatiale globale des résidus\nlm.morantest(Modele.MCO, W.Rook, alternative=\"two.sided\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGlobal Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = NO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet +\nNivVieMed, data = LyonIris)\nweights: W.Rook\n\nMoran I statistic standard deviate = 21.266, p-value < 2.2e-16\nalternative hypothesis: two.sided\nsample estimates:\nObserved Moran I      Expectation         Variance \n     0.587312061     -0.005375800      0.000776745 \n```\n\n\n:::\n:::\n\n\n\n\n\n\nAvec une valeur du *I* de Moran de 0,587 (*p* \\< 0,001), les résidus sont fortement autocorrélés spatialement, traduisant ainsi un problème de dépendance spatiale du modèle MCO et la nécessité de recourir à des modèles économétriques spatiaux. La cartographie des résidus à la @fig-figCartoResMCO corrobore ce résultat.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tmap)\n## Ajout de la colonne dans LyonIris avec les valeurs des résidus\nLyonIris$ModeleMCO.Residus <- residuals(Modele.MCO)\n## Cartographie\ntmap_mode(\"plot\")\ntm_shape(LyonIris)+\n  tm_fill(col=\"ModeleMCO.Residus\", n = 5, style = \"quantile\", \n          legend.format = list(text.separator = \"à\"),\n          palette = \"-RdBu\", title = \"Résidus\") +\n  tm_layout(frame=FALSE) + \n  tm_scale_bar(breaks = c(0,5))\n```\n\n::: {.cell-output-display}\n![Cartographie des résidus du modèle de régression multiple](07-RegressionSpatiales_files/figure-pdf/fig-figCartoResMCO-1.pdf){#fig-figCartoResMCO fig-align='center' fig-pos='H' width=85%}\n:::\n:::\n\n\n\n\n\n\n### Les différents modèles spatiaux autorégressifs {#sec-0712}\n\nSelon Jean Dubé et Diègo Legros, « cinq raisons peuvent motiver le choix d'un modèle autorégressif : la présence d'externalités, les effets d'entraînement, l'omission de variables importantes, la présence d'hétérogénéité spatiale des comportements, les effets mixtes » [-@dube2014econometrie, p. 120]. Les effets mixtes peuvent être la combinaison d'externalités avec des effets d'entraînement ou encore d'externalités avec l'omission d'une ou de plusieurs variables importantes spatialement structurées.\n\n#### Modèle SLX : autocorrélation spatiale sur les variables indépendantes {#sec-07121}\n\nDans un modèle SLX, l'autocorrélation spatiale est intégrée au niveau des variables indépendantes. Autrement dit, les variables indépendantes spatialement décalées ($WX$) sont introduites aussi dans le modèle. Par conséquent, la valeur de chaque unité spatiale du modèle est ainsi expliquée à la fois par ses propres caractéristiques et celles dans le voisinage ou à proximité en fonction de la matrice de pondération spatiale ($W$).\n\n::: bloc_aller_loin\n::: bloc_aller_loin-header\n::: bloc_aller_loin-icon\n:::\n\n**Rappel sur les variables spatialement décalées**\n:::\n\n::: bloc_aller_loin-body\nDans le chapitre 2 sur l'autocorrélation spatiale, nous avons vu comment calculer une variable spatialement décalée avec une matrice de pondération spatiale (@fig-Chap02FigureVariableSpatialementDecalee). À titre de rappel, lorsque cette dernière est standardisée en ligne, elle correspond à la valeur moyenne dans le voisinage.\n:::\n:::\n\nL'idée est alors d'introduire des **externalités** puisque les caractéristiques des entités spatiales proches ou voisines peuvent avoir un effet sur la variable dépendante [@dube2014econometrie]. L'équation du modèle SLX, qui est estimée selon la méthode des moindres carrés ordinaires (comme la régression linéaire multiple), s'écrit alors :\n\n$$\ny = X\\beta + WX\\theta + \\epsilon\n$$ {#eq-SLX}\n\navec :\n\n-   $y$, la variable dépendante.\n-   $X$, les variables indépendantes.\n-   $\\beta$, les coefficients des variables indépendantes.\n-   $W$, la matrice de pondération spatiale.\n-   $WX$, les variables indépendantes spatiales décalées.\n-   $\\theta$, les coefficients des variables indépendantes spatiales décalées.\n-   $\\epsilon$, les résidus.\n\n**Construction du modèle SLX dans R**\n\nLe modèle SLX est construit avec la fonction `lmSLX` du *package* `spatialreg` [@bivand2021review]. Remarquez, dans le code ci-dessous, le paramètre `listw=W.Rook` qui est utilisé pour spécifier la matrice de pondération spatiale.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(spatialreg)\n## Construction du modèle\nModele.SLX <- lmSLX(NO2 ~ Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n                   listw=W.Rook,     # matrice de pondération spatiale\n                   data = LyonIris)  # dataframe\n## Résultats du modèle\nsummary(Modele.SLX)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = formula(paste(\"y ~ \", paste(colnames(x)[-1], collapse = \"+\"))), \n    data = as.data.frame(x), weights = weights)\n\nCoefficients:\n                Estimate    Std. Error  t value     Pr(>|t|)  \n(Intercept)      5.068e+01   4.188e+00   1.210e+01   1.040e-29\nPct0_14         -2.040e-01   6.268e-02  -3.255e+00   1.211e-03\nPct_65          -3.771e-02   5.361e-02  -7.033e-01   4.822e-01\nPct_Img          1.041e-01   4.849e-02   2.146e+00   3.235e-02\nPct_brevet      -7.363e-02   3.550e-02  -2.074e+00   3.857e-02\nNivVieMed       -1.844e-01   1.106e-01  -1.667e+00   9.617e-02\nlag.Pct0_14     -7.759e-01   1.030e-01  -7.537e+00   2.315e-13\nlag.Pct_65      -6.454e-02   9.115e-02  -7.081e-01   4.792e-01\nlag.Pct_Img      6.465e-01   8.593e-02   7.524e+00   2.526e-13\nlag.Pct_brevet  -3.013e-01   6.157e-02  -4.893e+00   1.344e-06\nlag.NivVieMed   -1.805e-02   1.750e-01  -1.031e-01   9.179e-01\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n::: bloc_attention\n::: bloc_attention-header\n::: bloc_attention-icon\n:::\n\n**Effets directs, indirects et totaux**\n:::\n\n::: bloc_attention-body\nLa formulation d'un modèle SLX implique deux types d'effets pour les variables indépendantes ($X$) : \n\n-   les **effets directs**, soit ceux des caractéristiques des entités spatiales. Ils correspondent aux coefficients $\\beta$ des variables indépendantes ($X$). Autrement dit, pour une observation $i$, à chaque augmentation d'une unité d'une caractéristique $X$, la valeur de $y_i$ va varier (augmenter ou diminuer) en fonction du coefficient $\\beta$.\n\n-   les **effets indirects**, soit ceux des caractéristiques des entités spatiales voisines ou proches définies selon la matrice de pondération spatiale. Ils correspondent aux coefficients $\\theta$ des variables indépendantes spatialement décalées ($WX$). Autrement dit, les valeurs de $WX$ des entités spatiales proches ou voisines $j$ de $i$ vont aussi être amenées à varier, impactant alors les valeurs $y_j$ selon les coefficients $\\theta$.\n\n\nPrenons l'exemple d'un modèle visant à prédire le prix de vente des maisons dans une ville en fonction de leurs caractéristiques des maisons, dont la superficie du jardin. Il est probable que plus la superficie du jardin de la maison $i$ augmente, plus le prix de vente augmente également (**effet direct**, coefficient $\\beta$). Cette augmentation de la taille du jardin aura aussi un impact sur le prix des maisons voisines puisque leur prix est dépendant de la taille des jardins des maisons voisines. Ainsi, chaque maison $j$, voisine de $i$ verra son prix augmenter à cause de l'augmentation de la taille du jardin de la maison $i$ (**effet indirect**).\n\n\nPour capturer l'impact total sur le prix des maisons d'une augmentation de la superficie du jardin de la maison $i$, il suffit de sommer son effet direct (augmentation du prix de la maison $i$) et son effet indirect (augmentation du prix des maisons $j$) pour obtenir son effet total.\n\nLe code suivant permet de calculer ces effets directs et indirects.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Effets directs, indirects et totaux (uniquement les coefficients)\nimpacts(Modele.SLX)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nImpact measures (SlX, glht):\n                Direct    Indirect      Total\nPct0_14    -0.20403803 -0.77590830 -0.9799463\nPct_65     -0.03770918 -0.06453809 -0.1022473\nPct_Img     0.10406359  0.64653923  0.7506028\nPct_brevet -0.07363272 -0.30128171 -0.3749144\nNivVieMed  -0.18440960 -0.01804718 -0.2024568\n```\n\n\n:::\n\n```{.r .cell-code}\n## Effets directs, indirects et totaux (coefficients, valeurs de z et de p)\nsummary(impacts(Modele.SLX))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nImpact measures (SlX, glht, n-k):\n                Direct    Indirect      Total\nPct0_14    -0.20403803 -0.77590830 -0.9799463\nPct_65     -0.03770918 -0.06453809 -0.1022473\nPct_Img     0.10406359  0.64653923  0.7506028\nPct_brevet -0.07363272 -0.30128171 -0.3749144\nNivVieMed  -0.18440960 -0.01804718 -0.2024568\n========================================================\nStandard errors:\n               Direct   Indirect      Total\nPct0_14    0.06268202 0.10295210 0.10045332\nPct_65     0.05361420 0.09114695 0.08556272\nPct_Img    0.04849085 0.08593145 0.08060028\nPct_brevet 0.03549819 0.06157121 0.05975821\nNivVieMed  0.11063207 0.17499339 0.14911021\n========================================================\nZ-values:\n               Direct   Indirect     Total\nPct0_14    -3.2551283 -7.5365951 -9.755241\nPct_65     -0.7033432 -0.7080664 -1.194998\nPct_Img     2.1460460  7.5238953  9.312658\nPct_brevet -2.0742665 -4.8932234 -6.273857\nNivVieMed  -1.6668729 -0.1031306 -1.357766\n\np-values:\n           Direct    Indirect   Total     \nPct0_14    0.0011334 4.8184e-14 < 2.22e-16\nPct_65     0.4818419 0.47890    0.23209   \nPct_Img    0.0318693 5.3069e-14 < 2.22e-16\nPct_brevet 0.0380546 9.9198e-07 3.5221e-10\nNivVieMed  0.0955397 0.91786    0.17454   \n```\n\n\n:::\n:::\n\n\n\n\n\n\nÀ la lecture des valeurs de *p*, nous constatons que seule la variable `Pct0_14` a un impact direct et indirect significatif au seuil 0,01. L'augmentation d'un point de pourcentage de la population de moins de 15 ans est associé localement à une réduction de 0,20 de la concentration annuelle du dioxyde d'azote. Chez les entités voisines, cette réduction est de 0,78 et l'effet total est donc une réduction de 0,98.\n\n:::\n:::\n\n\n**Dépendance spatiale du modèle SLX?**\n\nCe modèle a-t-il corrigé le problème de dépendance spatiale du modèle de régression linéaire classique? Avec une valeur du *I* de Moran de 0,605 (*p* \\< 0,001), les résidus sont toujours fortement autocorrélés spatialement (@fig-figCartoResSLX).\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm.morantest(Modele.SLX, W.Rook, alternative=\"two.sided\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGlobal Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = formula(paste(\"y ~ \", paste(colnames(x)[-1],\ncollapse = \"+\"))), data = as.data.frame(x), weights = weights)\nweights: W.Rook\n\nMoran I statistic standard deviate = 21.951, p-value < 2.2e-16\nalternative hypothesis: two.sided\nsample estimates:\nObserved Moran I      Expectation         Variance \n    0.6046602748    -0.0072844321     0.0007771643 \n```\n\n\n:::\n\n```{.r .cell-code}\nLyonIris$SLX.Residus <- residuals(Modele.SLX)\ntm_shape(LyonIris)+\n  tm_fill(col=\"SLX.Residus\", n = 5, style = \"quantile\", \n          legend.format = list(text.separator = \"à\"),\n          palette = \"-RdBu\", title = \"Résidus\") +\n  tm_layout(frame=FALSE) + \n  tm_scale_bar(breaks = c(0,5))\n```\n\n::: {.cell-output-display}\n![Cartographie des résidus du modèle SLX](07-RegressionSpatiales_files/figure-pdf/fig-figCartoResSLX-1.pdf){#fig-figCartoResSLX fig-align='center' fig-pos='H' width=85%}\n:::\n:::\n\n\n\n\n\n\n#### Modèle SAR : autocorrélation spatiale sur la variable dépendante {#sec-07122}\n\nDans le modèle SAR (aussi appelé SAR-LAG), l'autocorrélation spatiale est intégrée au niveau de la variable dépendante ($Wy$), qui est ainsi spatialement décalée. L'idée générale est que la valeur de la variable dépendante pour une observation ($y_i$) peut être influencée par les valeurs de $y$ des observations voisines et proches. L'exemple le plus classique est le prix de vente des maisons : il est influencé à la fois par les caractéristiques intrinsèques de la maison ($X$, par exemple, la superficie habitable, le nombre de chambres à coucher, de salles de bains, etc.) et par le prix de vente des maisons voisines ($Wy$). Jean Dubé et Diègo Legros [-@dube2014econometrie] qualifient ce phénomène « **d'effets d'entraînement ou d'effets de débordement** (*spillover effects*) » [-@dube2014econometrie, p. 123]. L'équation du modèle SAR s'écrit alors :\n\n$$\ny = Wy\\rho + X\\beta + \\epsilon\n$$ {#eq-SLM}\n\navec :\n\n-   $y$, la variable dépendante.\n-   $W$, la matrice de pondération spatiale.\n-   $Wy$, la variable dépendante spatialement décalée.\n-   $\\rho$ (prononcez *rho*), le coefficient de la variable dépendante spatialement décalée. Il varie de -1 à 1.\n-   $X$, les variables indépendantes.\n-   $\\beta$, les coefficients des variables indépendantes.\n-   $\\epsilon$, les résidus.\n\n**Construction du modèle SAR dans R**\n\nLe modèle SAR est construit avec la fonction `lagsarlm` du *package* `spatialreg`.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Construction du modèle\nModele.SAR <- lagsarlm(NO2 ~ Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n                              listw=W.Rook,    # matrice de pondération spatiale\n                              data = LyonIris, # dataframe\n                              type = 'lag')    # Modèle lag par défaut\n## Résultats du modèle\nsummary(Modele.SAR, Nagelkerke=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:lagsarlm(formula = NO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet + \n    NivVieMed, data = LyonIris, listw = W.Rook, type = \"lag\")\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-12.86859  -1.88111  -0.49760   0.94464  18.21351 \n\nType: lag \nCoefficients: (asymptotic standard errors) \n             Estimate Std. Error z value  Pr(>|z|)\n(Intercept)  7.838906   1.646232  4.7617 1.919e-06\nPct0_14     -0.098708   0.030554 -3.2306  0.001235\nPct_65      -0.034543   0.026957 -1.2814  0.200044\nPct_Img      0.030241   0.024491  1.2348  0.216917\nPct_brevet  -0.019234   0.017855 -1.0772  0.281384\nNivVieMed   -0.098413   0.048985 -2.0090  0.044534\n\nRho: 0.87939, LR test value: 620.31, p-value: < 2.22e-16\nAsymptotic standard error: 0.01942\n    z-value: 45.283, p-value: < 2.22e-16\nWald statistic: 2050.5, p-value: < 2.22e-16\n\nLog likelihood: -1366.157 for lag model\nML residual variance (sigma squared): 10.181, (sigma: 3.1908)\nNagelkerke pseudo-R-squared: 0.78962 \nNumber of observations: 506 \nNumber of parameters estimated: 8 \nAIC: 2748.3, (AIC for lm: 3366.6)\nLM test for residual autocorrelation\ntest value: 0.6198, p-value: 0.43112\n```\n\n\n:::\n:::\n\n\n\n\n\n\nDans les résultats ci-dessus, la valeur de *rho* est de 0,88 (LR = 620, *p* \\< 0,001), traduisant un très fort effet d'entraînement. Autrement dit, lorsqu'en moyenne la concentration de dioxyde d'azote augmente dans les IRIS voisines ($Wy$), elle augmente aussi fortement chaque IRIS ($y$).\n\n\n::: bloc_attention\n::: bloc_attention-header\n::: bloc_attention-icon\n:::\n\n**Effets directs, indirects et totaux**\n:::\n\n::: bloc_attention-body\nTout comme le modèle SLX vu précédemment, la formulation du modèle SAR-LAG implique des effets particuliers. Reprenons l'exemple d'un modèle prédisant le prix de vente des maisons avec cette fois-ci un modèle de type SAR-LAG :\n\n1. L'augmentation de la superficie du jardin de la maison $i$ va faire augmenter le prix de la maison $i$ ($y_i$).\n2. Cette augmentation de prix de la maison $i$ aura un impact sur les voisins de $i$, soit les maisons $j$, car leur prix dépend du prix de la maison $i$ au travers du terme $Wy\\rho$ du modèle. Par exemple, si $\\rho$ vaut 0,8, alors 80% de l'augmentation du prix de $i$ va se répercuter sur le prix des maisons $j$.\n3. De même, les voisines des maisons $j$, les maisons $k$ vont aussi être impactées par le changement de prix des maisons $j$ et ainsi de suite de voisins en voisins.\n4. Au final, la maison $i$ verra son prix augmenter encore plus, car le prix de ses voisines aura augmenté par effet de rétroaction.\n\nNotez que puisque $-1 < \\rho < 1$, l'effet de déversement décroit à mesure qu'il se transmet de voisins en voisins jusqu'à disparaitre, un peu à l'image d'une onde se propageant sur une surface d'eau.\n\nCe processus de propagation est appelé l'effet d'entraînement ou de débordement (*spillover*) en économétrie. \n\nL'effet original de l'augmentation de la taille du jardin sur la maison $i$, combiné à l'augmentation par rétroaction, est appelé l'effet direct. L'effet cumulé de l'augmentation de la taille du jardin sur toutes les autres maisons ($\\neq i$) est appelé l'effet indirect. La somme des effets indirects et des directs est appelée effets totaux.\n\nÀ nouveau, il est possible d'utiliser la fonction `impacts` pour calculer ces effets directs et indirects.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Effets directs, indirects et totaux (uniquement les coefficients)\nimpacts(Modele.SAR, listw = W.Rook, R = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nImpact measures (lag, exact):\n                Direct   Indirect      Total\nPct0_14    -0.13878038 -0.6796248 -0.8184052\nPct_65     -0.04856624 -0.2378349 -0.2864012\nPct_Img     0.04251743  0.2082131  0.2507306\nPct_brevet -0.02704205 -0.1324283 -0.1594703\nNivVieMed  -0.13836534 -0.6775923 -0.8159576\n```\n\n\n:::\n\n```{.r .cell-code}\n## Effets directs, indirects et totaux (coefficients, valeurs de z et de p)\nsummary(impacts(Modele.SAR, listw = W.Rook, R = 999), zstats = TRUE, short = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nImpact measures (lag, exact):\n                Direct   Indirect      Total\nPct0_14    -0.13878038 -0.6796248 -0.8184052\nPct_65     -0.04856624 -0.2378349 -0.2864012\nPct_Img     0.04251743  0.2082131  0.2507306\nPct_brevet -0.02704205 -0.1324283 -0.1594703\nNivVieMed  -0.13836534 -0.6775923 -0.8159576\n========================================================\nSimulation results ( variance matrix):\n========================================================\nSimulated standard errors\n               Direct  Indirect     Total\nPct0_14    0.04311854 0.2417281 0.2801439\nPct_65     0.03799207 0.1942553 0.2311891\nPct_Img    0.03429199 0.1761186 0.2095703\nPct_brevet 0.02447359 0.1248117 0.1487223\nNivVieMed  0.06692148 0.3563214 0.4195402\n\nSimulated z-values:\n              Direct  Indirect     Total\nPct0_14    -3.233425 -2.864750 -2.969585\nPct_65     -1.302694 -1.260782 -1.273441\nPct_Img     1.227140  1.184188  1.195965\nPct_brevet -1.099429 -1.070548 -1.079353\nNivVieMed  -2.075948 -1.935606 -1.975075\n\nSimulated p-values:\n           Direct    Indirect  Total   \nPct0_14    0.0012232 0.0041734 0.002982\nPct_65     0.1926793 0.2073873 0.202862\nPct_Img    0.2197700 0.2363386 0.231710\nPct_brevet 0.2715811 0.2843727 0.280430\nNivVieMed  0.0378988 0.0529160 0.048260\n```\n\n\n:::\n:::\n\n\n\n\n\n\nL'interprétation des effets directs se rapproche de celle des coefficients classiques. Ainsi, selon ce modèle, l'augmentation du niveau de vie médian de 1000 € dans un IRIS est associée avec une diminution moyenne de la concentration de dioxyde d'azote de 0,14 dans cet IRIS. L'effet total est de -0.82, indiquant qu'en moyenne, l'augmentation de 1000 € du niveau de vie médian dans un IRIS est associée avec une diminution totale de 0,82 de la concentration de dioxyde d'azote dans l'ensemble des IRIS. Au final, l'effet indirect est simplement la différence entre l'effet total et l'effet direct. Nous pouvons constater ici que les effets indirects sont plus importants que les effets directs.\n\n:::\n:::\n\n**Dépendance spatiale du modèle SAR?**\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n## Autocorrélation spatiale des résidus\ntest <- moran.mc(resid(Modele.SAR), W.Rook, nsim=999)\nprint(test)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  resid(Modele.SAR) \nweights: W.Rook  \nnumber of simulations + 1: 1000 \n\nstatistic = -0.014281, observed rank = 340, p-value = 0.66\nalternative hypothesis: greater\n```\n\n\n:::\n\n```{.r .cell-code}\n## Cartographie des résidus\nLyonIris$SAR.Residus <- resid(Modele.SAR)\ntm_shape(LyonIris)+\n  tm_fill(col=\"SAR.Residus\", n = 5, style = \"quantile\", \n          legend.format = list(text.separator = \"à\"),\n          palette = \"-RdBu\", title = \"Résidus\") +\n  tm_layout(frame=FALSE) + \n  tm_scale_bar(breaks = c(0,5))\n```\n\n::: {.cell-output-display}\n![Cartographie des résidus du modèle SAR](07-RegressionSpatiales_files/figure-pdf/fig-figCartoResSAR-1.pdf){#fig-figCartoResSAR fig-align='center' fig-pos='H' width=85%}\n:::\n:::\n\n\n\n\n\nCe modèle a-t-il corrigé le problème de dépendance spatiale du modèle de régression linéaire classique? Avec une valeur du *I* de Moran de -0.014 (*p* = 0.66), les résidus ne sont plus spatialement autocorrélés (@fig-figCartoResSAR).\n\n\n\n#### Modèle SEM : autocorrélation spatiale sur le terme d'erreur {#sec-07123}\n\nDans le modèle SEM (*Spatial Error Model*, appelé aussi *SAR-ERROR*), l'intégration de l'autocorrélation spatiale est réalisée sur le terme d'erreur, ce qui pourrait se justifier par l'omission d'une variable dépendante spatialement structurée [@dube2014econometrie, p. 126]. L'équation du modèle SEM s'écrit :\n\n$$\ny = X\\beta + u \\textrm{, } u = \\lambda Wu + \\epsilon\n$$ {#eq-SEM}\n\navec :\n\n-   $y$, la variable dépendante.\n-   $W$, la matrice de pondération spatiale.\n-   $\\lambda$ (prononcez *lambda*), le coefficient sur le terme d'erreur spatialement décalé. Il varie de -1 à 1.\n-   $X$, les variables indépendantes.\n-   $\\beta$, les coefficients des variables indépendantes.\n-   $\\epsilon$, les résidus.\n\n**Construction du modèle SAR dans R**\n\nLe modèle SEM est construit avec la fonction `errorsarlm` du *package* `spatialreg`.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Construction du modèle\nModele.SEM <- errorsarlm(NO2 ~ Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n                         listw=W.Rook,    # matrice de pondération spatiale\n                         data = LyonIris) # dataframe\n## Résultats du modèle\nsummary(Modele.SEM, Nagelkerke=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:errorsarlm(formula = NO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet + \n    NivVieMed, data = LyonIris, listw = W.Rook)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-12.86150  -1.83161  -0.44106   0.91029  17.94924 \n\nType: error \nCoefficients: (asymptotic standard errors) \n             Estimate Std. Error z value Pr(>|z|)\n(Intercept) 30.544576   2.358173 12.9526  < 2e-16\nPct0_14     -0.035019   0.033393 -1.0487  0.29431\nPct_65      -0.026039   0.028970 -0.8988  0.36874\nPct_Img     -0.016770   0.026176 -0.6407  0.52175\nPct_brevet   0.023708   0.019074  1.2430  0.21388\nNivVieMed   -0.146309   0.060273 -2.4274  0.01521\n\nLambda: 0.91138, LR test value: 613.15, p-value: < 2.22e-16\nAsymptotic standard error: 0.01651\n    z-value: 55.201, p-value: < 2.22e-16\nWald statistic: 3047.2, p-value: < 2.22e-16\n\nLog likelihood: -1369.737 for error model\nML residual variance (sigma squared): 9.9971, (sigma: 3.1618)\nNagelkerke pseudo-R-squared: 0.78662 \nNumber of observations: 506 \nNumber of parameters estimated: 8 \nAIC: 2755.5, (AIC for lm: 3366.6)\n```\n\n\n:::\n:::\n\n\n\n\n\n\nDans les résultats ci-dessus, la valeur de *lambda* est de 0,91 (LR = 613, *p* \\< 0,001), traduisant une très forte autocorrélation spatiale sur le terme d'erreur.\n\n**Dépendance spatiale du modèle SEM?**\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Autocorrélation spatiale des résidus\ntest <- moran.mc(resid(Modele.SEM), W.Rook, nsim=999)\nprint(test)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  resid(Modele.SEM) \nweights: W.Rook  \nnumber of simulations + 1: 1000 \n\nstatistic = -0.011827, observed rank = 379, p-value = 0.621\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\nCe modèle a-t-il corrigé le problème de dépendance spatiale du modèle de régression linéaire classique? Avec une valeur du *I* de Moran de -0.012 (*p* = 0.621), les résidus ne sont plus spatialement autocorrélés.\n\n#### Modèle SDM : autocorrélation spatiale sur la variable dépendante et les variables indépendantes {#sec-07124}\n\nLe modèle SDM (*Spatial Durbin Model*) est un modèle mixte qui intègre à la fois l'autocorrélation spatiale sur la variable dépendante ($Wy$, **effets d'entraînement ou de débordement**) et sur les variables indépendantes ($WX$, **externalités**). Il s'écrit alors :\n\n$$\ny = Wy\\rho + X\\beta + WX\\theta + \\epsilon\n$$ {#eq-SDM}\n\navec :\n\n-   $y$, la variable dépendante.\n-   $W$, la matrice de pondération spatiale.\n-   $Wy$, la variable dépendante spatialement décalée.\n-   $\\rho$, le coefficient de la variable dépendante spatialement décalée.\n-   $X$, les variables indépendantes.\n-   $\\beta$, les coefficients des variables indépendantes.\n-   $WX$, les variables indépendantes spatiales décalées.\n-   $\\theta$, les coefficients des variables indépendantes spatiales décalées.\n-   $\\epsilon$, les résidus.\n\n**Construction du modèle SDM dans R**\n\nLe modèle SDM est construit avec la fonction `lagsarlm` du *package* `spatialreg`. Notez que le paramètre `type = \"mixed\"` spécifie l'utilisation d'un modèle mixte.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Construction du modèle\nModele.DurbinSpatial <- lagsarlm(NO2 ~ Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n                       listw = W.Rook,    # matrice de pondération spatiale\n                       data = LyonIris,   # dataframe\n                       type = \"mixed\")\n## Résultats du modèles\nsummary(Modele.DurbinSpatial, Nagelkerke=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:lagsarlm(formula = NO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet + \n    NivVieMed, data = LyonIris, listw = W.Rook, type = \"mixed\")\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-12.60922  -1.77753  -0.43909   0.99252  18.15526 \n\nType: mixed \nCoefficients: (asymptotic standard errors) \n                 Estimate Std. Error z value Pr(>|z|)\n(Intercept)     8.1130457  2.5671301  3.1604 0.001576\nPct0_14        -0.0574046  0.0344908 -1.6643 0.096043\nPct_65         -0.0238715  0.0293647 -0.8129 0.416256\nPct_Img         0.0048364  0.0266560  0.1814 0.856025\nPct_brevet      0.0112746  0.0195259  0.5774 0.563656\nNivVieMed      -0.1463876  0.0605853 -2.4162 0.015682\nlag.Pct0_14    -0.1242574  0.0581170 -2.1381 0.032512\nlag.Pct_65      0.0255480  0.0499646  0.5113 0.609125\nlag.Pct_Img     0.1559952  0.0482138  3.2355 0.001214\nlag.Pct_brevet -0.0883930  0.0342496 -2.5809 0.009856\nlag.NivVieMed   0.1032469  0.0960201  1.0753 0.282257\n\nRho: 0.84127, LR test value: 492.38, p-value: < 2.22e-16\nAsymptotic standard error: 0.023363\n    z-value: 36.009, p-value: < 2.22e-16\nWald statistic: 1296.7, p-value: < 2.22e-16\n\nLog likelihood: -1353.106 for mixed model\nML residual variance (sigma squared): 9.9845, (sigma: 3.1598)\nNagelkerke pseudo-R-squared: 0.8002 \nNumber of observations: 506 \nNumber of parameters estimated: 13 \nAIC: 2732.2, (AIC for lm: 3222.6)\nLM test for residual autocorrelation\ntest value: 0.0748, p-value: 0.78447\n```\n\n\n:::\n:::\n\n\n\n\n\n\n**Effets directs, indirects et totaux**\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Effets directs, indirects et totaux (uniquement les coefficients)\nimpacts(Modele.DurbinSpatial, listw = W.Rook, R = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nImpact measures (mixed, exact):\n                Direct    Indirect       Total\nPct0_14    -0.12369039 -1.02079497 -1.14448536\nPct_65     -0.02177191  0.03233406  0.01056215\nPct_Img     0.06632543  0.94692639  1.01325182\nPct_brevet -0.01903815 -0.46681402 -0.48585217\nNivVieMed  -0.15403413 -0.11775603 -0.27179016\n```\n\n\n:::\n\n```{.r .cell-code}\n# Effets directs, indirects et totaux (coefficients, valeurs de z et de p)\nsummary(impacts(Modele.DurbinSpatial, listw = W.Rook, R = 999), zstats = TRUE, short = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nImpact measures (mixed, exact):\n                Direct    Indirect       Total\nPct0_14    -0.12369039 -1.02079497 -1.14448536\nPct_65     -0.02177191  0.03233406  0.01056215\nPct_Img     0.06632543  0.94692639  1.01325182\nPct_brevet -0.01903815 -0.46681402 -0.48585217\nNivVieMed  -0.15403413 -0.11775603 -0.27179016\n========================================================\nSimulation results ( variance matrix):\n========================================================\nSimulated standard errors\n               Direct  Indirect     Total\nPct0_14    0.04372816 0.3232734 0.3525711\nPct_65     0.03497663 0.2840611 0.3059622\nPct_Img    0.03316650 0.2739069 0.2943299\nPct_brevet 0.02602762 0.1992782 0.2165489\nNivVieMed  0.06996510 0.4978543 0.5365154\n\nSimulated z-values:\n               Direct   Indirect       Total\nPct0_14    -2.8331109 -3.1721374 -3.25992233\nPct_65     -0.6252506  0.1387484  0.05733996\nPct_Img     2.0552290  3.5303304  3.51696123\nPct_brevet -0.7664894 -2.3574956 -2.26160078\nNivVieMed  -2.1721692 -0.1951222 -0.46432678\n\nSimulated p-values:\n           Direct    Indirect   Total     \nPct0_14    0.0046097 0.00151321 0.00111443\nPct_65     0.5318066 0.88964900 0.95427439\nPct_Img    0.0398569 0.00041504 0.00043652\nPct_brevet 0.4433851 0.01839867 0.02372208\nNivVieMed  0.0298429 0.84529725 0.64241364\n```\n\n\n:::\n:::\n\n\n\n\n\n\nNotez que les effets ci-dessus sont différents de ceux que nous avions obtenus pour le simple modèle SAR-LAG car les effets des variables *X* laguées entrainent également des effets de déversement qui viennent se combiner aux effets de déversement du terme *Wy*.\n\n**Dépendance spatiale du modèle SDM?**\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest <- moran.mc(resid(Modele.DurbinSpatial), W.Rook, nsim=999)\nprint(test)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  resid(Modele.DurbinSpatial) \nweights: W.Rook  \nnumber of simulations + 1: 1000 \n\nstatistic = -0.0046127, observed rank = 476, p-value = 0.524\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\n\n\n\nCe modèle a-t-il corrigé le problème de dépendance spatiale du modèle de régression linéaire classique? Avec une valeur du *I* de Moran de -0.005 (*p* = 0.524), les résidus ne sont plus spatialement autocorrélés.\n\n\n#### Modèle SDEM : autocorrélation spatiale sur les variables indépendantes et sur le terme d'erreur {#sec-07125}\n\nLe modèle SDEM (*Spatial Durbin Error Model* en anglais) est un autre modèle mixte qui intègre à la fois l'autocorrélation spatiale sur les valeurs indépendantes ($WX$, **externalités**) et sur le terme d'erreur ($u = \\lambda Wu + \\epsilon$). Il s'écrit alors :\n\n$$\ny = X\\beta + WX\\theta + u \\textrm{, } u = \\lambda Wu + \\epsilon\n$$ {#eq-SDEM}\n\navec :\n\n-   $y$, la variable dépendante.\n-   $W$, la matrice de pondération spatiale.\n-   $X$, les variables indépendantes.\n-   $\\beta$, les coefficients des variables indépendantes.\n-   $WX$, les variables dépendantes spatiales décalées.\n-   $\\theta$, les coefficients des variables indépendantes spatiales décalées.\n-   $\\lambda$ (prononcez *lambda*), le coefficient sur le terme d'erreur spatialement décalé.\n-   $\\epsilon$, les résidus.\n\n**Construction du modèle SDEM dans R**\n\nLe modèle SDEM est construit avec la fonction `errorsarlm` du *package* `spatialreg`. Notez que le paramètre `etype = \"mixed\"` spécifie l'utilisation d'un modèle mixte.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Construction du modèle\nModele.DurbinErreur <- errorsarlm(NO2 ~ Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n                                  listw=W.Rook,    # matrice de pondération spatiale\n                                  data = LyonIris, # dataframe\n                                  etype = 'emixed')\n## Résultats du modèle\nsummary(Modele.DurbinErreur, Nagelkerke=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:errorsarlm(formula = NO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet + \n    NivVieMed, data = LyonIris, listw = W.Rook, etype = \"emixed\")\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-12.99324  -1.82407  -0.45644   1.06084  18.21108 \n\nType: error \nCoefficients: (asymptotic standard errors) \n                Estimate Std. Error z value  Pr(>|z|)\n(Intercept)    37.061010   6.501018  5.7008 1.192e-08\nPct0_14        -0.081998   0.041699 -1.9664   0.04925\nPct_65         -0.026329   0.034714 -0.7585   0.44817\nPct_Img         0.004656   0.031028  0.1501   0.88072\nPct_brevet      0.009785   0.023884  0.4097   0.68203\nNivVieMed      -0.167855   0.068005 -2.4683   0.01358\nlag.Pct0_14    -0.176747   0.102345 -1.7270   0.08417\nlag.Pct_65      0.010533   0.089183  0.1181   0.90599\nlag.Pct_Img     0.092785   0.079704  1.1641   0.24437\nlag.Pct_brevet -0.038048   0.056688 -0.6712   0.50211\nlag.NivVieMed  -0.102531   0.172405 -0.5947   0.55204\n\nLambda: 0.8976, LR test value: 464.09, p-value: < 2.22e-16\nAsymptotic standard error: 0.018242\n    z-value: 49.204, p-value: < 2.22e-16\nWald statistic: 2421, p-value: < 2.22e-16\n\nLog likelihood: -1367.25 for error model\nML residual variance (sigma squared): 10.046, (sigma: 3.1696)\nNagelkerke pseudo-R-squared: 0.78871 \nNumber of observations: 506 \nNumber of parameters estimated: 13 \nAIC: 2760.5, (AIC for lm: 3222.6)\n```\n\n\n:::\n:::\n\n\n\n\n\n\n**Effets directs, indirects et totaux**\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Effets directs, indirects et totaux (uniquement les coefficients)\nimpacts(Modele.DurbinErreur, listw = W.Rook, R = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nImpact measures (SDEM, glht):\n                 Direct    Indirect       Total\nPct0_14    -0.081997642 -0.17674683 -0.25874447\nPct_65     -0.026329370  0.01053248 -0.01579689\nPct_Img     0.004656039  0.09278511  0.09744115\nPct_brevet  0.009784961 -0.03804813 -0.02826317\nNivVieMed  -0.167855498 -0.10253070 -0.27038620\n```\n\n\n:::\n\n```{.r .cell-code}\n## Effets directs, indirects et totaux (coefficients, valeurs de z et de p)\nsummary(impacts(Modele.DurbinErreur, listw = W.Rook, R = 999), zstats = TRUE, short = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nImpact measures (SDEM, glht, n):\n                 Direct    Indirect       Total\nPct0_14    -0.081997642 -0.17674683 -0.25874447\nPct_65     -0.026329370  0.01053248 -0.01579689\nPct_Img     0.004656039  0.09278511  0.09744115\nPct_brevet  0.009784961 -0.03804813 -0.02826317\nNivVieMed  -0.167855498 -0.10253070 -0.27038620\n========================================================\nStandard errors:\n               Direct   Indirect      Total\nPct0_14    0.04169878 0.10234506 0.13146453\nPct_65     0.03471367 0.08918350 0.11192948\nPct_Img    0.03102807 0.07970364 0.09949722\nPct_brevet 0.02388387 0.05668833 0.07344175\nNivVieMed  0.06800483 0.17240549 0.21172909\n========================================================\nZ-values:\n               Direct   Indirect      Total\nPct0_14    -1.9664279 -1.7269698 -1.9681695\nPct_65     -0.7584727  0.1180989 -0.1411325\nPct_Img     0.1500589  1.1641264  0.9793354\nPct_brevet  0.4096890 -0.6711810 -0.3848379\nNivVieMed  -2.4682880 -0.5947067 -1.2770385\n\np-values:\n           Direct   Indirect Total   \nPct0_14    0.049249 0.084173 0.049049\nPct_65     0.448168 0.905989 0.887765\nPct_Img    0.880718 0.244373 0.327414\nPct_brevet 0.682034 0.502105 0.700358\nNivVieMed  0.013576 0.552040 0.201589\n```\n\n\n:::\n:::\n\n\n\n\n\n\n**Dépendance spatiale du modèle SDEM?**\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest <- moran.mc(resid(Modele.DurbinErreur), W.Rook, nsim=999)\nprint(test)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  resid(Modele.DurbinErreur) \nweights: W.Rook  \nnumber of simulations + 1: 1000 \n\nstatistic = -0.010362, observed rank = 376, p-value = 0.624\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\n\n\n\nAvec une valeur du *I* de Moran de -0.01 (*p* = 0.624), les résidus du modèle SDEM ne sont pas spatialement autocorrélés.\n\n\n### Quel modèle choisir? {#sec-0713}\n\n#### Tests du multiplicateur de Lagrange sur le modèle MCO {#sec-07131}\n\nL'utilisation des tests du multiplicateur de Lagrange (simple et robuste) a été largement popularisée par Anselin *et al.* [-@anselin1996simple] pour vérifier si le recours à un modèle autorégressif est nécessaire, comparativement à un modèle de régression classique (MCO). Les tests sont calculés sur le modèle MCO avec la fonction `lm.LMtests` et une matrice de pondération spatiale. Ces tests permettent aussi de choisir entre les modèles SAR et SEM. La démarche suivante peut être utilisée pour choisir un modèle :\n\n1.  Si toutes les valeurs des tests (simples et robustes) sont non significatives (*p* \\> 0,05), alors le recours à un modèle autorégressif n'est pas nécessaire. Nous pouvons conserver le modèle de régression classique (MCO).\n2.  Si les valeurs de `LMlag` ou `RLMlag` sont non significatives (*p* \\> 0,05), alors le recours au modèle SAR n'est pas nécessaire.\n3.  Si les valeurs de `LMerr` ou `RLMerr` sont non significatives (*p* \\> 0,05), alors le recours au modèle SEM n'est pas nécessaire.\n4.  Si les valeurs de `RLMlag` et `RLMerr` sont significatives (*p* \\< 0,001), nous choisissons le modèle ayant la plus forte statistique.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlag_test <- lm.LMtests(model = Modele.MCO,\n                   listw = W.Rook,\n                   test = c(\"LMlag\",\"LMerr\",\"RLMlag\",\"RLMerr\"))\nsummary(lag_test)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\tRao's score (a.k.a Lagrange multiplier) diagnostics for spatial\n\tdependence\ndata:  \nmodel: lm(formula = NO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet +\nNivVieMed, data = LyonIris)\ntest weights: listw\n \n         statistic parameter p.value    \nRSlag    554.65778         1  <2e-16 ***\nRSerr    432.83282         1  <2e-16 ***\nadjRSlag 122.56452         1  <2e-16 ***\nadjRSerr   0.73955         1  0.3898    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\nDans les résultats ci-dessous, nous ne retenons pas le modèle SEM car la valeur de 0.74 pour le `adjRSerr` n'est pas significative (*p* = 0.39). En revanche, les valeurs de `RSlag` et de `adjRSlag` (555 et `RLMlag` (123) sont significatives, ce qui justifie la sélection du modèle SAR.\n\n#### Comparaison des modèles mixtes et non mixtes {#sec-07132}\n\nNous avons vu qu'il existe deux modèles mixtes (SDM et SDEM). Il convient alors de vérifier si le recours d'un modèle mixte est justifié comparativement à un modèle non mixte. Dans le code ci-dessous, nous vérifions si le modèle SDM est statistiquement différent du modèle SAR avec les fonctions `LR.Sarlm` et `anova`. Les résultats signalent un écart significatif des valeurs du log-vraisemblance (26,101, *p* \\< 0,001). Par conséquent, ce modèle mixte a un apport significatif.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## SDM et SEM sont-ils significativement différents?\nLR.Sarlm(Modele.DurbinSpatial, Modele.SAR)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tLikelihood ratio for spatial linear models\n\ndata:  \nLikelihood ratio = 26.101, df = 5, p-value = 8.528e-05\nsample estimates:\nLog likelihood of Modele.DurbinSpatial           Log likelihood of Modele.SAR \n                             -1353.106                              -1366.157 \n```\n\n\n:::\n\n```{.r .cell-code}\nanova(Modele.DurbinSpatial, Modele.SAR)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     Model df    AIC  logLik Test L.Ratio    p-value\nModele.DurbinSpatial     1 13 2732.2 -1353.1    1                   \nModele.SAR               2  8 2748.3 -1366.2    2  26.101 8.5283e-05\n```\n\n\n:::\n:::\n\n\n\n\n\n\nÀ l'inverse, la différence entre les valeurs du log-vraisemblance des modèles SDEM et SEM n'est pas significative (4,9728, *p* = 0,42), signalant que l'utilisation d'un modèle SDEM comparativement à un modèle SEM n'est pas nécessaire.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## SDEM et SEM sont-ils significativement différents?\nLR.Sarlm(Modele.DurbinErreur, Modele.SEM)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tLikelihood ratio for spatial linear models\n\ndata:  \nLikelihood ratio = 4.9728, df = 5, p-value = 0.4192\nsample estimates:\nLog likelihood of Modele.DurbinErreur          Log likelihood of Modele.SEM \n                            -1367.250                             -1369.737 \n```\n\n\n:::\n\n```{.r .cell-code}\nanova(Modele.DurbinErreur, Modele.SEM)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    Model df    AIC  logLik Test L.Ratio p-value\nModele.DurbinErreur     1 13 2760.5 -1367.2    1                \nModele.SEM              2  8 2755.5 -1369.7    2  4.9728  0.4192\n```\n\n\n:::\n:::\n\n\n\n\n\n\n#### Mesures AIC et BIC et dépendance spatiale {#sec-07133}\n\nLe critère d'information d'Akaike (AIC) et le critère d'information bayésien (BIC) sont largement utilisés pour évaluer la qualité d'ajustement du modèle. Plus leurs valeurs sont faibles, meilleur est le modèle. Il est donc possible de comparer leurs valeurs pour les différents modèles (MCO, SLX, SAR, SEM, SDM et SDEM). Nous pouvons aussi comparer l'autocorrélation spatiale des résidus des modèles avec le *I* de Moran.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Valeurs d'AIC et de BIC\nAICs <- AIC(Modele.MCO, Modele.SLX, Modele.SAR, Modele.SEM, \n            Modele.DurbinSpatial, Modele.DurbinErreur)\nBICs <- BIC(Modele.MCO, Modele.SLX, Modele.SAR, Modele.SEM, \n            Modele.DurbinSpatial, Modele.DurbinErreur)\n## Autocorrélation spatiale des résidus\nIMoran.MCO <- moran.mc(resid(Modele.MCO), W.Rook, nsim=999)\nIMoran.SLX <- moran.mc(resid(Modele.SLX), W.Rook, nsim=999)\nIMoran.SLM <- moran.mc(resid(Modele.SAR), W.Rook, nsim=999)\nIMoran.SEM <- moran.mc(resid(Modele.SEM), W.Rook, nsim=999)\nIMoran.DurbinS <- moran.mc(resid(Modele.DurbinSpatial), W.Rook, nsim=999)\nIMoran.DurbinE <- moran.mc(resid(Modele.DurbinErreur), W.Rook, nsim=999)\nMoranI.s <- c(IMoran.MCO$statistic, IMoran.SLX$statistic,\n             IMoran.SLM$statistic, IMoran.SEM$statistic,\n             IMoran.DurbinS$statistic, IMoran.DurbinE$statistic)\nMoranI.p <- c(IMoran.MCO$p.value, IMoran.SLX$p.value,\n             IMoran.SLM$p.value, IMoran.SEM$p.value,\n             IMoran.DurbinS$p.value, IMoran.DurbinE$p.value)\n## Tableau\nComparaison <- data.frame(Modele = c(\"MCO\", \"SLX\", \"SAR\", \"SEM\", \"Durbin S\", \"Durbin E\"),\n                          AIC = AICs$AIC,\n                          BIC = BICs$BIC,\n                          dl = AICs$df,\n                          MoranI = MoranI.s,\n                          MoranIp = MoranI.p)\nComparaison\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Modele      AIC      BIC dl       MoranI MoranIp\n1      MCO 3366.626 3396.212  7  0.587312061   0.001\n2      SLX 3222.594 3273.313 12  0.604660275   0.001\n3      SAR 2748.314 2782.126  8 -0.014281059   0.660\n4      SEM 2755.474 2789.286  8 -0.011826605   0.599\n5 Durbin S 2732.212 2787.157 13 -0.004612686   0.549\n6 Durbin E 2760.501 2815.446 13 -0.010361653   0.604\n```\n\n\n:::\n:::\n\n\n\n\n\n\nQuelques lignes de code suffisent pour créer deux graphiques permettant de comparer visuellement les résultats des différents modèles (@fig-GraphComparaison). Les résultats démontrent que :\n\n-   Les modèles MCO et SLX ont un problème de dépendance spatiale puisque leurs résidus sont significativement autocorrélés spatialement. Par conséquent, ils ne devraient pas être retenus.\n-   Les modèles SDM, SAR et SEM sont les plus performants avec les valeurs d'AIC les plus faibles.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggpubr)\n## Graphique pour l'autocorrélation spatiale\ng1 <- ggplot(data=Comparaison, aes(x=reorder(Modele,MoranI), y=MoranI)) +\n      geom_segment(aes(x=reorder(Modele, MoranI),\n                   xend=reorder(Modele, MoranI),\n                   y=0, yend=MoranI)) +\n  geom_point( size=4,fill=\"red\",shape=21)+\n  xlab(\"Modèle\") + ylab(\"I de Moran\")+\n  labs(title=\"Autocorrélation spatiale des résidus\",\n       caption=\"Plus la valeur du I de Moran est faible, \\nmoins il y a d'autocorrélation spatiale.\")\n## Graphique pour les valeurs d'AIC\ng2 <- ggplot(data=Comparaison, aes(x=reorder(Modele,AIC), y=AIC)) +\n  geom_segment(aes(x=reorder(Modele, AIC),\n                   xend=reorder(Modele, AIC),\n                   y=0, yend=AIC)) +\n  geom_point( size=4,fill=\"red\",shape=21)+\n  xlab(\"Modèle\") + ylab(\"AIC\")+\n  labs(title=\"Qualité d'ajustement du modèle\",\n       caption=\"Plus la valeur d'AIC est faible, \\nplus le modèle est performant.\")\n## Figure avec les deux graphiques\nggarrange(g1, g2)\n```\n\n::: {.cell-output-display}\n![Comparaison des différents modèles](07-RegressionSpatiales_files/figure-pdf/fig-GraphComparaison-1.pdf){#fig-GraphComparaison fig-align='center' fig-pos='H' width=85%}\n:::\n:::\n\n\n\n\n\n\n## Modèles généralisés additifs (GAM) avec une *spline* bivariée sur les coordonnées géographiques {#sec-072}\n\nLes modèles généralisés additifs (*Generalized additive models* en anglais) permettent d'intégrer à la fois des effets linéaires et des effets non linéaires avec des *splines*. Ils peuvent alors être utilisés en intégrant une *spline* bivariée sur les coordonnées géographiques des centroïdes des entités spatiales.\n\n::: bloc_attention\n::: bloc_attention-header\n::: bloc_attention-icon\n:::\n\n**Modèles généralisés additifs**\n:::\n\n::: bloc_attention-body\nPour une description détaillée des modèles généralisés additifs, nous vous invitons vivement à lire le [chapitre suivant](https://serieboldr.github.io/MethodesQuantitatives/11-GAM.html) [@RBoldAir].\n:::\n:::\n\n### Principe de base d'un GAM intégrant l'espace {#sec-0721}\n\nAvec une *spline* bivariée sur les coordonnées géographiques, l'équation d'un modèle généralisé additif s'écrit :\n\n$$\ng(Y) \\ = \\beta_{0} \\ + X\\beta + s(CoordX,CoordY) \\ + \\epsilon\n$$ {#eq-GAM}\n\navec :\n\n-   $y$, la variable dépendante.\n-   $\\beta_{0}$, la constante.\n-   $X$, les variables indépendantes.\n-   $\\beta$, les coefficients des variables dépendantes.\n-   $s(CoordX,CoordY)$, *spline* bivariée sur les coordonnées *x* et *y*.\n-   $\\epsilon$, les résidus.\n\nL'intérêt de recourir à une *spline* bivariée sur les coordonnées géographiques est double :\n\n1.  Contrôler l'effet de la localisation sur la variable dépendante ($y$). Les coefficients des autres variables indépendantes sont ainsi obtenus une fois l'espace pris en compte.\n\n2.  Évaluer l'effet de la localisation (patron spatial), une fois les autres variables indépendantes contrôlées. Autrement dit, toutes choses étant égales par ailleurs, quel est l'effet de la localisation sur la variable dépendante?\n\n### Construction d'un modèle GAM dans R {#sec-0722}\n\n#### Réalisation du modèle GAM {#sec-07221}\n\nPour construire des modèles GAM dans R, nous utilisons la fonction `gam` du *package* `mgcv` [@wood2011fast].\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mgcv)\n## Ajout des coordonnées X et Y dans LyonIris \nxy <- st_coordinates(st_centroid(LyonIris))\nLyonIris$X <- xy[,1]\nLyonIris$Y <- xy[,2]\n## Construction du modèle GAM\nModele.GAM1 <- gam(NO2 ~  Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed+\n                          s(X, Y),    # spline sur les coordonnées X, Y\n                    data = LyonIris)  # dataframe\n## Résultats du modèle\nsummary(Modele.GAM1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nNO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet + NivVieMed + s(X, \n    Y)\n\nParametric coefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 30.402313   2.156322  14.099   <2e-16 ***\nPct0_14     -0.053641   0.046224  -1.160    0.246    \nPct_65      -0.056310   0.038476  -1.463    0.144    \nPct_Img      0.008033   0.035397   0.227    0.821    \nPct_brevet   0.043874   0.027518   1.594    0.112    \nNivVieMed   -0.043282   0.072461  -0.597    0.551    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n        edf Ref.df     F p-value    \ns(X,Y) 26.5  28.62 27.22  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.715   Deviance explained = 73.3%\nGCV = 18.814  Scale est. = 17.605    n = 506\n```\n\n\n:::\n:::\n\n\n\n\n\n\nLes résultats ci-dessus signalent que la localisation a un effet très significatif puisque (s(X,Y) = 26,5 avec *p* \\< 0,001). Notez que la valeur de *p* permet de déterminer si la *spline* bivariée (et donc l'espace) a ou non un effet significatif. Si la valeur de *p* est supérieure à 0,05, alors il n'est pas nécessaire de conserver la *spline* bivariée sur les coordonnées géographiques.\n\nDe plus, le code ci-dessous permet de constater que le modèle GAM est plus performant que le modèle linéaire multiple classique (MCO).\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(Modele.MCO, Modele.GAM1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nModel 1: NO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet + NivVieMed\nModel 2: NO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet + NivVieMed + s(X, \n    Y)\n  Res.Df     RSS   Df Sum of Sq      F    Pr(>F)    \n1  500.0 22346.0                                    \n2  473.5  8336.1 26.5     14010 30.029 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n\n\nNous pouvons aussi introduire une *spline* plus complexe en augmentant le nombre de nœuds à 40.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nModele.GAM2 <- gam(NO2 ~  Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed+\n                          s(X, Y, k= 40), data = LyonIris)\nsummary(Modele.GAM2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nNO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet + NivVieMed + s(X, \n    Y, k = 40)\n\nParametric coefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 30.372093   2.088160  14.545   <2e-16 ***\nPct0_14     -0.055294   0.044285  -1.249   0.2124    \nPct_65      -0.049122   0.036870  -1.332   0.1834    \nPct_Img      0.002226   0.033722   0.066   0.9474    \nPct_brevet   0.052229   0.026315   1.985   0.0478 *  \nNivVieMed   -0.050991   0.070081  -0.728   0.4672    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n         edf Ref.df     F p-value    \ns(X,Y) 35.68  38.51 24.27  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.747   Deviance explained = 76.7%\nGCV = 17.014  Scale est. = 15.613    n = 506\n```\n\n\n:::\n:::\n\n\n\n\n\n\nLa valeur plus faible d'AIC pour le second modèle GAM signale qu'il est plus performant que le premier.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAIC(Modele.MCO, Modele.GAM1, Modele.GAM2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  df      AIC\nModele.MCO   7.00000 3366.626\nModele.GAM1 33.50046 2920.682\nModele.GAM2 42.67520 2868.355\n```\n\n\n:::\n:::\n\n\n\n\n\n\n#### Visualisation de l'effet de l'espace {#sec-07222}\n\nPour visualiser les prédictions du modèle dans l'espace, toutes choses étant égales par ailleurs, nous utilisons la fonction `vis.gam` (@fig-EffetLocalisation1). Les contours signalent qu'au centre de Lyon, les valeurs de dioxyde d'azote sont les plus élevées et dépassent même 40 $\\mu$g/m^3^.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvis.gam(Modele.GAM2, view=c(\"X\", \"Y\"), plot.type = \"contour\", color=\"terrain\")\n```\n\n::: {.cell-output-display}\n![Visualisation des prédictions dans l'espace avec la fonction `vis.gam`](07-RegressionSpatiales_files/figure-pdf/fig-EffetLocalisation1-1.pdf){#fig-EffetLocalisation1 fig-align='center' fig-pos='H' width=85%}\n:::\n:::\n\n\n\n\n\n\nToutefois, il est plus intéressant de la représenter dans un *raster*, une fois contrôlées les autres variables indépendantes. Pour ce faire, six étapes sont nécessaires :\n\n1.  Créer une *grid*.\n2.  Fixer les autres paramètres à leur moyenne respective.\n3.  Calculer la prédiction pour la localisation.\n4.  Centrer la prédiction.\n5.  Construire le *raster* avec les prédictions.\n6.  Découper et cartographier le *raster*.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(raster)\nlibrary(terra)\n## Étape 1 : création d'une grid pour la prédiction de 100 mètres de résolution spatiale\nXcoords <- seq(min(LyonIris$X-100), max(LyonIris$X+100), by=100)\nYcoords <- seq(min(LyonIris$Y-100), max(LyonIris$Y+100), by=100)\nPredDF <- expand.grid(Xcoords,Ycoords)\nnames(PredDF) <- c(\"X\",\"Y\")\n## Étape 2 : fixation de tous les autres paramètres à leur moyenne\nfor(Var in c(\"VegHautPrt\",\"Pct0_14\",\"Pct_65\",\"Pct_Img\",\"Pct_brevet\", \"NivVieMed\")){\n  PredDF[[Var]] <- mean(LyonIris[[Var]])\n}\n## Étape 3 : calcul de la prédiction\nPredDF$PM25 <- predict(Modele.GAM2,newdata=PredDF)\n## Étape 4 : centrage de la prédiction (sans la constante)\nPredDF$CenterPredPM25 <- PredDF$PM25 - mean(PredDF$PM25)\n### Étape 5 : construction du raster\nrasterGAM <- rasterFromXYZ(PredDF[, c(\"X\", \"Y\", \"CenterPredPM25\")])\ncrs(rasterGAM) <- crs(as(LyonIris, \"Spatial\"))\nrasterGAM <- rast(rasterGAM)\n### Étape 6 : découpage et cartographie du raster\nLyonIris.SpatVector <- vect(LyonIris)\nrasterGAM <- terra::mask(rasterGAM, LyonIris.SpatVector)\nterra::plot(rasterGAM)\n```\n\n::: {.cell-output-display}\n![Visualisation de l'effet de la localisation centrée sur zéro](07-RegressionSpatiales_files/figure-pdf/fig-EffetLocalisation2-1.pdf){#fig-EffetLocalisation2 fig-align='center' fig-pos='H' width=85%}\n:::\n:::\n\n\n\n\n\n\nLa @fig-EffetLocalisation2 signale que dans le centre de Lyon, le dioxyde d'azote est plus élevé de 10 à 20 $\\mu$g/m^3^, toutes choses étant égales par ailleurs. À l'inverse, dans les zones périphériques, il est faible. Cela signale un net patron spatial décroissant du centre vers la périphérie.\n\n#### Dépendance spatiale du modèle GAM {#sec-07223}\n\nPar contre, bien que l'autocorrélation spatiale des résidus du modèle GAM soit plus faible que pour le modèle MCO (*I* de Moran de 0,337 contre 0,570 avec *p* \\< 0,001), il reste que le problème de la dépendance spatiale n'est pas corrigé.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran.mc(resid(Modele.GAM2), W.Rook, nsim=999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  resid(Modele.GAM2) \nweights: W.Rook  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.33664, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Régression géographiquement pondérée {#sec-073}\n\nLa régression géographiquement pondérée (*geographically weighted regression* - GWR, en anglais) a été proposée par Fotheringham *et al.* [-@fotheringham2003geographically] pour modéliser une variable continue. Depuis, plusieurs extensions ont été proposées, notamment des GWR mixtes, des GWR logistiques ou Poisson. Dans le cadre de cette section, nous abordons uniquement sa forme classique (variable dépendante continue).\n\n### Principe de base {#sec-0731}\n\n**Pourquoi recourir à la GWR?**\n\nDans la [section @sec-071], nous avons vu que les modèles autorégressifs visent à contrôler la **dépendance spatiale** d'un modèle de régression classique (MCO), afin d'améliorer l'estimation des coefficients de régression. L'objectif des modèles de régression géographiquement pondérée est différent : ils visent à analyser les variations spatiales de la relation entre la variable dépendante et les variables indépendantes.\n\nAutrement dit, les modèles GWR visent à explorer **l'instabilité spatiale du modèle MCO** afin d'analyser localement la relation entre la variable dépendante et les variables indépendantes. Pour une description détaillée en français de la GWR, consultez Apparicio *et al.* [-@apparicio2007modelisation].\n\n**Formulation de la GWR**\n\nContrairement à la régression linéaire classique et aux modèles spatiaux autorégressifs qui produisent une équation pour l'ensemble du tableau de données, la GWR produit une équation pour chaque unité spatiale *i* et ainsi, des valeurs locales de R^2^, $\\beta_0$, $\\beta_k$, *t* de Student, etc. La résolution de cette équation de régression locale est aussi basée sur la méthode des moindres carrés et sur une matrice de pondération W(i) dont les valeurs décroissent en fonction de la distance séparant les unités *i* et *j*. Autrement dit, plus *j* est proche de *i*, plus sa pondération est élevée et donc plus son « rôle » dans la détermination de l'équation de régression locale de *i* est important.\n\nDe la sorte, la GWR est une extension de la régression linéaire multiple classique où $(u_i, v_i)$ représente les coordonnées géographiques du centroïde de l'unité spatiale et où les paramètres $\\beta_0$ et $\\beta_k$ peuvent varier dans l'espace (@eq-GWR).\n\n$$\ny_i = \\beta_0(u_i, v_i)+ \\sum_{j=1}^k \\beta_j(u_i, v_i)x_{ij}+ \\epsilon_i\n$$ {#eq-GWR}\n\navec :\n\n-   $(u_i, v_i)$, les coordonnées géographiques de l'unité spatiale *i*.\n-   $y_i$, la variable dépendante pour l'unité spatiale *i*.\n-   $\\beta_0(u_i, v_i)$, la constante pour l'unité spatiale *i* aux coordonnées géographiques $(u_i, v_i)$.\n-   $\\beta_j(u_i, v_i)$, le coefficient de régression pour la variable $x_j$ (avec *k* variables indépendantes) pour l'unité spatiale *i* aux coordonnées géographiques $(u_i, v_i)$.\n-   $x_{ij}$, la valeur de la variable indépendante $x_j$ pour l'unité spatiale *i*.\n-   $\\epsilon_i$, le terme d'erreur pour l'unité spatiale *i*.\n\nFotheringham *et al.* [-@fotheringham2003geographically] proposent deux fonctions *kernel* pour définir la pondération W(i) dans le modèle GWR : une fonction gaussienne (@eq-kernelgaussien) et une fonction bicarrée (@eq-kernelbicarree) où $d_{ij}$ représente la distance euclidienne entre les points *i* et *j* et *b*, le rayon de zone d'influence autour du point *i* (*bandwidth*). Il existe une différence fondamentale entre les deux : la fonction gaussienne accorde un poids non nul à tous les points de l'espace d'étude aussi loin soient-ils, tandis que la fonction bicarrée ne tient pas compte des points distants à plus de *b* mètres de *i*, tel qu'illustré à la @fig-GWRKernels avec une valeur fixée à 5000 mètres en guise d'exemple.\n\n$$\nw_{ij} = exp[-.5(d_{ij}/b)^2]\n$$ {#eq-kernelgaussien}\n\n$$\nw_{ij} = [1-(d_{ij}/b)^2]^2 \\text{ si } d_{ij}< b \\text{, sinon } w_{ij}=0 \n$$ {#eq-kernelbicarree}\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Fonctions kernel pour définir la matrice de pondération W(i)](07-RegressionSpatiales_files/figure-pdf/fig-GWRKernels-1.pdf){#fig-GWRKernels fig-align='center' width=75%}\n:::\n:::\n\n\n\n\n\n\nDans le modèle GWR, la valeur de *b* est soit fixée par la personne utilisatrice, soit optimisée avec la valeur de CV (*cross-validation*) ou celle de l'AIC. Notez qu'il est possible d'optimiser la taille de la zone d'influence à partir de la distance euclidienne ou du nombre de plus proches voisins.\n\n### Construction et analyse du modèle GWR dans R {#sec-0732}\n\nPour construire un modèle GWR dans R, nous utilisons le *package* `spgwr` [@packagesGWR]. La construction d'un modèle GWR comprend les étapes suivantes :\n\n1.  Sélection de la taille de la zone d'influence (*bandwidth*) optimale.\n\n2.  Réalisation de la GWR avec la taille de la zone d'influence optimale.\n\n3.  Comparaison des modèles MCO et GWR.\n\n4.  Cartographie des résultats du modèle GWR (R^2^, coefficients, valeurs de *t*, etc.).\n\n#### Définition de la taille de la zone d'influence {#sec-07321}\n\nLa sélection de la taille de la zone d'influence optimale est réalisée avec la fonction `gwr.sel` pour laquelle :\n\n-   le paramètre `gweight` permet de spécifier une fonction *kernel* gaussienne (`gwr.gauss`) ou bicarrée (`gwr.gauss`).\n\n-   le paramètre `adapt` permet de spécifier si vous optimisez le nombre de plus proches voisins (`adapt=TRUE`) ou la distance (`adapt=FALSE`).\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(spgwr)\n## Optimisation du nombre de voisins avec le CV\nbwaCV.voisins  <- gwr.sel(NO2 ~  Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n                          data = LyonIris,\n                          method = \"cv\",          # Méthode cv ou AIC\n                          gweight=gwr.bisquare,   # gwr.gauss ou gwr.bisquare\n                          adapt=TRUE,\n                          verbose = FALSE,\n                          RMSE = TRUE,\n                          longlat = FALSE,\n                          coords=cbind(LyonIris$X,LyonIris$Y))\n## Optimisation du nombre de voisins avec l'AIC\nbwaAIC.voisins <- gwr.sel(NO2 ~  Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n                          data = LyonIris,\n                          method = \"AIC\",          # Méthode cv ou AIC\n                          gweight=gwr.bisquare,    # gwr.gauss ou gwr.bisquare\n                          adapt=TRUE,              # adaptatif\n                          verbose = FALSE,\n                          RMSE = TRUE,\n                          longlat = FALSE,\n                          coords=cbind(LyonIris$X,LyonIris$Y))\n## Optimisation de la distance avec le CV\nbwnaCV.dist <- gwr.sel(NO2 ~  Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n                           data = LyonIris,\n                           method = \"cv\",     # méthode cv ou AIC\n                           gweight=gwr.Gauss, # gwr.gauss ou gwr.bisquare\n                           adapt=FALSE,       # non adaptatif\n                           verbose = FALSE,\n                           RMSE = TRUE,\n                           longlat = FALSE,\n                           coords=cbind(LyonIris$X,LyonIris$Y))\n## Optimisation de la distance avec l'AIC\nbwnaAIC.dist <- gwr.sel(NO2 ~  Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n                          data = LyonIris,\n                          method = \"AIC\",      # méthode cv ou AIC\n                          gweight=gwr.Gauss,   # gwr.gauss ou gwr.bisquare\n                          adapt=FALSE,         # non adaptatif\n                          RMSE = TRUE,\n                          verbose = FALSE,\n                          longlat = FALSE,\n                          coords=cbind(LyonIris$X,LyonIris$Y))\n## Affichage des résultats d'optimisation \ncat(\"Sélection de la taille de la zone optimale (bandwidth)\",\n    \"\\n avec le nombre de plus proches voisins :\",\n    \"\\n  CV =\", round(bwaCV.voisins,4), \"nombre de voisins =\", \n    round(bwaCV.voisins*nrow(LyonIris)),\n    \"\\n  AIC =\", round(bwaAIC.voisins,4), \"nombre de voisins =\", \n    round(bwaAIC.voisins*nrow(LyonIris)),\n    \"\\nSélection de la taille de la zone optimale (bandwidth) avec la distance :\",\n    \"\\n  CV =\", round(bwnaCV.dist, 0),  \"mètres\",\n    \"\\n  AIC =\", round(bwnaAIC.dist, 0), \"mètres\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSélection de la taille de la zone optimale (bandwidth) \n avec le nombre de plus proches voisins : \n  CV = 0.1818 nombre de voisins = 92 \n  AIC = 0.1067 nombre de voisins = 54 \nSélection de la taille de la zone optimale (bandwidth) avec la distance : \n  CV = 1315 mètres \n  AIC = 1662 mètres\n```\n\n\n:::\n:::\n\n\n\n\n\n\nLes résultats ci-dessus montrent que le nombre de plus proches voisins pourrait être de 92 selon l'approche *cross-validation* et de 54 selon la méthode basée sur l'AIC. Si la valeur de *b* est basée sur la distance, elle serait alors optimale à 1315 et 1662 mètres selon les deux méthodes.\n\n#### Réalisation de la GWR {#sec-07322}\n\nAvec la fonction `gwr`, nous estimons un modèle GWR avec un *kernel* bicarré et un nombre optimisé de plus voisins selon la méthode CV, soit 92.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nModele.GWR <- gwr(NO2 ~ Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed,\n              data = LyonIris,\n              adapt=bwaCV.voisins,\n              gweight=gwr.bisquare,\n              hatmatrix=TRUE,\n              se.fit=TRUE,\n              coords=cbind(LyonIris$X,LyonIris$Y),\n              longlat=F)\n```\n:::\n\n\n\n\n\n\nLe code ci-dessous permet de renvoyer les statistiques univariées des coefficients des 506 régressions locales, réalisées pour chacune des 506 entités spatiales (IRIS), et les statistiques d'ajustement du modèle (AIC, R^2^ global, etc.)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nModele.GWR\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\ngwr(formula = NO2 ~ Pct0_14 + Pct_65 + Pct_Img + Pct_brevet + \n    NivVieMed, data = LyonIris, coords = cbind(LyonIris$X, LyonIris$Y), \n    gweight = gwr.bisquare, adapt = bwaCV.voisins, hatmatrix = TRUE, \n    longlat = F, se.fit = TRUE)\nKernel function: gwr.bisquare \nAdaptive quantile: 0.1818192 (about 92 of 506 data points)\nSummary of GWR coefficient estimates at data points:\n                  Min.   1st Qu.    Median   3rd Qu.      Max.  Global\nX.Intercept. 12.429518 30.249511 38.619342 48.038863 60.098584 49.4330\nPct0_14      -1.094802 -0.360556 -0.215643 -0.047687  0.382801 -0.5335\nPct_65       -0.715331 -0.158253 -0.031353  0.076086  0.464992 -0.1505\nPct_Img      -0.331892 -0.049146  0.077177  0.240755  0.670433  0.2829\nPct_brevet   -0.655221 -0.221655 -0.084954  0.047835  0.598456 -0.2400\nNivVieMed    -1.140895 -0.560649 -0.214717  0.193768  1.311228 -0.3162\nNumber of data points: 506 \nEffective number of parameters (residual: 2traceS - traceS'S): 107.1278 \nEffective degrees of freedom (residual: 2traceS - traceS'S): 398.8722 \nSigma (residual: 2traceS - traceS'S): 4.118116 \nEffective number of parameters (model: traceS): 81.53263 \nEffective degrees of freedom (model: traceS): 424.4674 \nSigma (model: traceS): 3.992025 \nSigma (ML): 3.656286 \nAICc (GWR p. 61, eq 2.33; p. 96, eq. 4.21): 2945.674 \nAIC (GWR p. 96, eq. 4.22): 2829.504 \nResidual sum of squares: 6764.424 \nQuasi-global R2: 0.783008 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n#### Comparaison des modèles MCO et GWR {#sec-07323}\n\nLe R^2^ global du modèle GWR est bien supérieur au modèle classique MCO (0,783 contre 0,283). Fotheringham *et al.* [-@fotheringham2003geographically] proposent plusieurs tests pour comparer les modèles GWR et classique qui sont implémentés dans le *package* `spgwr` (fonctions `anova(Modele.GWR)`, `anova(Modele.GWR, approx=TRUE)`, `LMZ.F1GWR.test(Modele.GWR)`, `LMZ.F2GWR.test(Modele.GWR)`.\n\nSi les valeurs de *p* de ces tests sont inférieures à 0,05, alors le modèle GWR améliore de façon significative la capacité prédictive du modèle de régression globale, ce que confirment les résultats ci-dessous.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(Modele.GWR)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table \n                    Df  Sum Sq Mean Sq F value\nOLS Residuals     6.00 22346.0                \nGWR Improvement 101.13 15581.6 154.078        \nGWR Residuals   398.87  6764.4  16.959  9.0854\n```\n\n\n:::\n\n```{.r .cell-code}\nanova(Modele.GWR, approx=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table \napproximate degrees of freedom (only tr(S))\n                     Df  Sum Sq Mean Sq F value\nOLS Residuals     6.000 22346.0                \nGWR Improvement  75.533 15581.6 206.290        \nGWR Residuals   424.467  6764.4  15.936  12.945\n```\n\n\n:::\n\n```{.r .cell-code}\nLMZ.F1GWR.test(Modele.GWR)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tLeung et al. (2000) F(1) test\n\ndata:  Modele.GWR\nF = 0.37946, df1 = 430.81, df2 = 500.00, p-value < 2.2e-16\nalternative hypothesis: less\nsample estimates:\nSS OLS residuals SS GWR residuals \n       22346.021         6764.424 \n```\n\n\n:::\n\n```{.r .cell-code}\nLMZ.F2GWR.test(Modele.GWR)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tLeung et al. (2000) F(2) test\n\ndata:  Modele.GWR\nF = 3.4476, df1 = 142.92, df2 = 500.00, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\n  SS OLS residuals SS GWR improvement \n          22346.02           15581.60 \n```\n\n\n:::\n:::\n\n\n\n\n\n\nUn autre test (`LMZ.F3GWR.test`) permet de répondre à la question suivante : est-ce que les coefficients de régression du modèle GWR varient spatialement de façon significative? Les résultats ci-dessous démontrent que c'est le cas pour toutes les variables indépendantes et la constante (*p* \\< 0,001).\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLMZ.F3GWR.test(Modele.GWR)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nLeung et al. (2000) F(3) test\n\n            F statistic Numerator d.f. Denominator d.f.     Pr(>)    \n(Intercept)      2.2771       134.3880           430.81 1.629e-10 ***\nPct0_14          2.7767       141.7244           430.81 5.636e-16 ***\nPct_65           2.0918       169.0472           430.81 8.399e-10 ***\nPct_Img          1.9486       106.4400           430.81 1.550e-06 ***\nPct_brevet       2.4445       121.2830           430.81 1.629e-11 ***\nNivVieMed        3.6926       138.8118           430.81 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n\n\n#### Cartographie des résultats du modèle GWR {#sec-07324}\n\nDans un premier temps, nous ajoutons les valeurs locales des R^2^, des coefficients de régression et des valeurs de *t* dans la couche `sf`. Notez que les résultats locaux de la GWR sont stockés dans l'objet `Modele.GWR$SDF`.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Récupération du R carré local\nLyonIris$GWR.R2 <- Modele.GWR$SDF$localR2\n## Récupération des coefficients de régression et calcul des valeurs de t locales\nnames(Modele.GWR$SDF)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"sum.w\"              \"(Intercept)\"        \"Pct0_14\"           \n [4] \"Pct_65\"             \"Pct_Img\"            \"Pct_brevet\"        \n [7] \"NivVieMed\"          \"(Intercept)_se\"     \"Pct0_14_se\"        \n[10] \"Pct_65_se\"          \"Pct_Img_se\"         \"Pct_brevet_se\"     \n[13] \"NivVieMed_se\"       \"gwr.e\"              \"pred\"              \n[16] \"pred.se\"            \"localR2\"            \"(Intercept)_se_EDF\"\n[19] \"Pct0_14_se_EDF\"     \"Pct_65_se_EDF\"      \"Pct_Img_se_EDF\"    \n[22] \"Pct_brevet_se_EDF\"  \"NivVieMed_se_EDF\"   \"pred.se\"           \n```\n\n\n:::\n\n```{.r .cell-code}\nVarsIndep <- c(\"Pct0_14\", \"Pct_65\", \"Pct_Img\", \"Pct_brevet\", \"NivVieMed\")\nfor(e in VarsIndep){\n  # Nom des nouvelles variables\n  var.coef <- paste0(\"GWR.\", \"B_\", e)\n  var.t    <- paste0(\"GWR.\", \"T_\", e)\n  # Récupération des coefficients pour les variables indépendantes\n  LyonIris[[var.coef]] <- Modele.GWR$SDF[[e]]\n  # Calcul des valeurs de t pour les variables indépendantes\n  LyonIris[[var.t]]    <- Modele.GWR$SDF[[e]] / Modele.GWR$SDF[[paste0(e, \"_se\")]]\n}\n```\n:::\n\n\n\n\n\n\n**Cartographie des R^2^ locaux**\n\nLe code ci-dessous permet ensuite de cartographier les R^2^ locaux de la GWR (@fig-GWRR2).\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tmap)\ntm_shape(LyonIris)+\n  tm_borders(col=\"gray25\", lwd=.5)+\n  tm_fill(col=\"GWR.R2\", \n\t\t  palette=\"YlOrBr\", \n\t\t  n=5, style=\"quantile\",\n\t\t  legend.format = list(text.separator = \"à\"),\n\t\t  title = \"R2 locaux\")+\n  tm_layout(frame=FALSE)+\n  tm_scale_bar(breaks=c(0,5))\n```\n\n::: {.cell-output-display}\n![Cartographie des R carrés locaux de la GWR](07-RegressionSpatiales_files/figure-pdf/fig-GWRR2-1.pdf){#fig-GWRR2 fig-align='center' fig-pos='H' width=85%}\n:::\n:::\n\n\n\n\n\n\n**Cartographie des coefficients de régression**\n\nLe code ci-dessous permet ensuite de cartographier les coefficients locaux de la GWR (@fig-GWRCoeffReg).\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nCarte1 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"GWR.B_Pct0_14\", palette=\"YlOrBr\", n=4, style=\"pretty\",\n\t\t          legend.format = list(text.separator = \"à\"),\n                  title = \"Moins de 15 ans (%)\")+\n          tm_layout(frame=FALSE, legend.outside = TRUE)+tm_scale_bar(breaks=c(0,5))\nCarte2 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"GWR.B_Pct_65\", palette=\"YlOrBr\", n=4, style=\"pretty\", \n\t\t          legend.format = list(text.separator = \"à\"),\n                  title = \"65 ans et plus (%)\")+\n          tm_layout(frame=FALSE, legend.outside = TRUE)+tm_scale_bar(breaks=c(0,5))\nCarte3 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"GWR.B_Pct_Img\", palette=\"YlOrBr\", n=4, style=\"pretty\", \n\t\t          legend.format = list(text.separator = \"à\"),\n                  title = \"Immigrants (%)\")+\n          tm_layout(frame=FALSE, legend.outside = TRUE)+tm_scale_bar(breaks=c(0,5))\nCarte4 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"GWR.B_Pct_brevet\", palette=\"YlOrBr\", n=4, style=\"pretty\", \n\t\t          legend.format = list(text.separator = \"à\"),\n                  title = \"Faible scolarité (%)\")+\n          tm_layout(frame=FALSE, legend.outside = TRUE)+tm_scale_bar(breaks=c(0,5))\nCarte5 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"GWR.B_NivVieMed\", palette=\"YlOrBr\", n=4, style=\"pretty\", \n\t\t          legend.format = list(text.separator = \"à\"),\n                  title = \"Niveau de vie (€1000)\")+\n          tm_layout(frame=FALSE, legend.outside = TRUE)+tm_scale_bar(breaks=c(0,5))\ntmap_arrange(Carte1, Carte2, Carte3, Carte4, Carte5, ncol = 2, nrow=3)\n```\n\n::: {.cell-output-display}\n![Cartographie des coefficients de régression de la GWR](07-RegressionSpatiales_files/figure-pdf/fig-GWRCoeffReg-1.pdf){#fig-GWRCoeffReg fig-align='center' fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n\n\n**Cartographie des valeurs de *t***\n\nPour cartographier les valeurs de *t*, nous utilisons les seuils de ± 1,96, 2,58 et 3,29, indiquant des seuils de signification à 5 %, 1 % et 0,1 % (@fig-GWRValT).\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nclasses.intervalles = c(-Inf, -3.29, -2.58, -1.96, 1.96, 2.58, 3.29, Inf)\nCarte1 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"GWR.T_Pct0_14\", palette=\"-RdBu\", \n                  breaks = classes.intervalles,\n\t\t          legend.format = list(text.separator = \"à\"),\n                  title = \"Moins de 15 ans (%)\")+\n          tm_layout(frame=FALSE, legend.outside = TRUE)\nCarte2 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"GWR.T_Pct_65\", palette=\"-RdBu\",\n                  breaks = classes.intervalles,\n\t\t          legend.format = list(text.separator = \"à\"),\n                  title = \"65 ans et plus (%)\")+\n          tm_layout(frame=FALSE, legend.outside = TRUE)\nCarte3 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"GWR.T_Pct_Img\", palette=\"-RdBu\", \n                  breaks = classes.intervalles,\n\t\t          legend.format = list(text.separator = \"à\"),\n                  title = \"Immigrants (%)\")+\n          tm_layout(frame=FALSE, legend.outside = TRUE)\nCarte4 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"GWR.B_Pct_brevet\", palette=\"-RdBu\", \n                  breaks = classes.intervalles,\n\t\t          legend.format = list(text.separator = \"à\"),\n                  title = \"Faible scolarité (%)\")+\n          tm_layout(frame=FALSE, legend.outside = TRUE)\nCarte5 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"GWR.T_NivVieMed\", palette=\"-RdBu\", \n                 breaks = classes.intervalles,\n\t\t          legend.format = list(text.separator = \"à\"),\n                 title = \"Niveau de vie (€1000)\")+\n          tm_layout(frame=FALSE, legend.outside = TRUE)+\n          tm_scale_bar(breaks=c(0,5))\ntmap_arrange(Carte1, Carte2, Carte3, Carte4, Carte5, ncol = 2, nrow=3)\n```\n\n::: {.cell-output-display}\n![Cartographie des valeurs de *t* de la GWR](07-RegressionSpatiales_files/figure-pdf/fig-GWRValT-1.pdf){#fig-GWRValT fig-align='center' fig-pos='H' width=100%}\n:::\n:::\n\n\n\n\n\n\n**Cartographie du nombre de variables significatives**\n\nNous pouvons aussi cartographier le nombre de variables localement significatives aux seuils de 5 % et 1 %.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n## Identifier la variable plus significative avec les valeurs de t\nVarsT <- paste0(\"GWR.T_\", c(\"Pct0_14\", \"Pct_65\", \"Pct_Img\", \"Pct_brevet\", \"NivVieMed\"))\nLyon.df  <- st_drop_geometry(LyonIris)\nLyon.df <- abs(Lyon.df[,VarsT])\nPlusSign <- VarsT[apply(Lyon.df[VarsT],1,which.max)]\nPlusSign <- substr(PlusSign, 7, nchar(PlusSign))\nMaxAbsTvalue <- apply(Lyon.df[VarsT], 1, max)\nPlusSign <- ifelse(MaxAbsTvalue<1.96, \"Aucune\", PlusSign)\n## Nombre de variables significatives au seuil de 5%, soit abs(t)= 1,96)\nLyonIris$NbSignif_1.96 <- as.factor(rowSums(Lyon.df > 1.96))\nLyonIris$NbSignif_2.58 <- as.factor(rowSums(Lyon.df > 2.58))\nLyonIris$PlusSign      <- as.factor(PlusSign)\n## Cartographie\nCarte1 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"NbSignif_1.96\", palette=\"Reds\",\n                 title = \"Sign. au seuil de 5%\")+\n          tm_layout(frame=FALSE)+ tm_scale_bar(breaks=c(0,5))\nCarte2 <- tm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"NbSignif_2.58\", palette=\"Reds\", \n                 title = \"Sign. au seuil de 1%\")+\n          tm_layout(frame=FALSE)\ntmap_arrange(Carte1, Carte2, ncol=2, nrow=1)\n```\n\n::: {.cell-output-display}\n![Nombre de variables significatives aux seuils de 5% et 1%](07-RegressionSpatiales_files/figure-pdf/fig-GWRNNsign-1.pdf){#fig-GWRNNsign fig-align='center' fig-pos='H' width=85%}\n:::\n:::\n\n\n\n\n\n\n**Cartographie de la variable la plus significative avec la valeur de *t***\n\nFinalement, le code ci-dessous permet de repérer la variable la plus significative au seuil de 5 %, c'est-à-dire avec la plus forte valeur absolue pour la valeur de *t*.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(LyonIris)+ tm_borders(col=\"gray25\", lwd=.5)+\n          tm_fill(col=\"PlusSign\", palette=\"Set1\", \n                 title = \"Variable la plus significative\")+\n          tm_layout(frame=FALSE)+ tm_scale_bar(breaks=c(0,5))\n```\n\n::: {.cell-output-display}\n![Variable indépendante la plus significative au seuil de 5 %](07-RegressionSpatiales_files/figure-pdf/fig-GWRPlussign-1.pdf){#fig-GWRPlussign fig-align='center' fig-pos='H' width=85%}\n:::\n:::\n\n\n\n\n\n\n::: bloc_aller_loin\n::: bloc_aller_loin-header\n::: bloc_aller_loin-icon\n:::\n\n**Extensions de la GWR classique**\n:::\n\n::: bloc_aller_loin-body\nÀ titre de rappel, la GWR classique permet de modéliser une variable dépendante continue. Plusieurs extensions ont été proposées, notamment :\n\n- La GWR mixte qui permet de spécifier des variables indépendantes variant spatialement et d'autres étant fixes [@fotheringham2003geographically].\n\n- Les GWR logistique (pour une variable dépendante binaire) et Poisson (pour une variable dépendante de comptage) [@fotheringham2003geographically].\n\n- La régression géographiquement et temporellement pondérée (*Geographical and temporal weighted regression* – GTWR) [@fotheringham2015geographical].\n\n- La régression géographiquement pondérée multiéchelle (*Multiscale geographically weighted regression* – MGWR) [@fotheringham2017multiscale].\n\n- L'analyse en composantes principales géographiquement pondérée (*Geographically weighted principal components analysis* – GWR PCA)  [@harris2011geographically].\n\n:::\n:::\n\n\n::: bloc_aller_loin\n::: bloc_aller_loin-header\n::: bloc_aller_loin-icon\n:::\n**Autres méthodes de régression spatiales**\n:::\n::: bloc_aller_loin-body\nComme signalé en introduction, si vous souhaitez maîtriser une plus large éventail de méthodes de régression spatiale, nous vous recommandons la lecture d’un autre ouvrage de la Série *Un grand Bol d'R* intitulé [**Méthodes de régression spatiale : un grand bol d’R**](https://serieboldr.com/RegressionsSpatiales/) [@RBoldAirRegSpatiales].\n:::\n:::\n\n\n\n## Quiz de révision du chapitre {#sec-074}\n\n\n\n\n\n\n**Questions**\n\n* **Qu'est-ce que la dépendance spatiale d'un modèle de régression?**\n\t+ Lorsque les variables indépendantes sont fortement corrélées entre elles.\n\t+ Lorsque les résidus du modèle sont fortement autocorrélés spatialement.\n\n\tRelisez au besoin la [section @sec-0711].\n\n* **Dans un modèle SLX, l'autocorrélation est introduite au niveau de :**\n\t+ Variable dépendante\n\t+ Variables indépendantes\n\t+ Terme d'erreur\n\t+ Variable dépendante et variables indépendantes\n\t+ Variable dépendante et terme d'erreur\n\n\tRelisez au besoin la [section @sec-07121].\n\n* **Dans un modèle SAR, l'autocorrélation est introduite au niveau de :**\n\t+ Variable dépendante\n\t+ Variables indépendantes\n\t+ Terme d'erreur\n\n\tRelisez au besoin la [section @sec-07122].\n\n* **Dans un modèle SEM, l'autocorrélation est introduite au niveau de :**\n\t+ Variable dépendante\n\t+ Variables indépendantes\n\t+ Terme d'erreur\n\n\tRelisez au besoin la [section @sec-07123].\n\n* **Dans un modèle mixte SDM, l'autocorrélation est introduite au niveau de :**\n\t+ Variable dépendante\n\t+ Variables indépendantes\n\t+ Terme d'erreur\n\n\tRelisez au besoin la [section @sec-07124].\n\n* **Dans un modèle SDEM, l'autocorrélation est introduite au niveau de :**\n\t+ Variable dépendante\n\t+ Variables indépendantes\n\t+ Terme d'erreur\n\n\tRelisez au besoin la [section @sec-07125].\n\n* **Comment est intégré l'espace dans un modèle généralisé additif?**\n\t+ Avec une variable spatialement décalée\n\t+ Avec une spline bivariée sur les coordonnées x et y\n\n\tRelisez au besoin la [section @sec-0721].\n\n* **Un modèle de régression géographiquement pondérée permet d'explorer**\n\t+ L'instabilité spatiale du modèle\n\t+ La dépendance du modèle\n\n\tRelisez le deuxième encadré à la [section @sec-0731].\n\n* **Un modèle de régression géographiquement pondérée produit autant de régressions que d'entités spatiales dans le jeu de données à l'étude.**\n\t+ Vrai\n\t+ Faux\n\n\tRelisez le deuxième encadré à la [section @sec-0731].\n\n\n**Réponses**\n\n * Qu'est-ce que la dépendance spatiale d'un modèle de régression?\n\t+ Lorsque les résidus du modèle sont fortement autocorrélés spatialement.\n * Dans un modèle SLX, l'autocorrélation est introduite au niveau de :\n\t+ Variables indépendantes\n * Dans un modèle SAR, l'autocorrélation est introduite au niveau de :\n\t+ Variable dépendante\n * Dans un modèle SEM, l'autocorrélation est introduite au niveau de :\n\t+ Terme d'erreur\n * Dans un modèle mixte SDM, l'autocorrélation est introduite au niveau de :\n\t+ Variable dépendante\n\t+ Variables indépendantes\n * Dans un modèle SDEM, l'autocorrélation est introduite au niveau de :\n\t+ Variables indépendantes\n\t+ Terme d'erreur\n * Comment est intégré l'espace dans un modèle généralisé additif?\n\t+ Avec une spline bivariée sur les coordonnées x et y\n * Un modèle de régression géographiquement pondérée permet d'explorer\n\t+ L'instabilité spatiale du modèle\n * Un modèle de régression géographiquement pondérée produit autant de régressions que d'entités spatiales dans le jeu de données à l'étude.\n\t+ Vrai\n\n\n\n\n\n\n## Exercices de révision {#sec-075}\n\n::: bloc_exercice\n::: bloc_exercice-header\n::: bloc_exercice-icon\n:::\n\n**Exercice 1.** Réalisation de modèles de régression autorégressifs spatiaux\n:::\n\n::: bloc_exercice-body\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(spatialreg)\n# Matrice de contiguïté selon le partage d'un segment (Rook)\nload(\"data/chap07/DonneesLyon.Rdata\")\nRook <- poly2nb(LyonIris, queen=FALSE)\nRook <- poly2nb(LyonIris, queen=FALSE)\nW.Rook <- nb2listw(Rook, zero.policy=TRUE, style = \"W\")\n# Modèles\nformule <- \"PM25 ~  Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed\"\nModele.SLX <- à compléter\nModele.SAR <- à compléter\nModele.SEM <- à compléter\nModele.DurbinSpatial <- à compléter\nModele.DurbinErreur <- à compléter\n```\n:::\n\n\n\n\n\n\nCorrection à la [section @sec-12071].\n:::\n:::\n\n::: bloc_exercice\n::: bloc_exercice-header\n::: bloc_exercice-icon\n:::\n\n**Exercice 2.** Réalisation d'un modèle GAM\n:::\n\n::: bloc_exercice-body\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(mgcv)\nload(\"data/chap07/DonneesLyon.Rdata\")\n# Ajout des coordonnées x et y\nxy <- à compléter\nLyonIris$X <- à compléter\nLyonIris$Y <- à compléter\n# Construction du modèle\nformule <- \"PM25 ~  Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed\"\nModele.GAM2 <- gam(NO2 ~  à compléter\n                          à compléter,\n                          data = LyonIris)\nsummary(Modele.GAM2)\n```\n:::\n\n\n\n\n\n\nCorrection à la [section @sec-12072].\n:::\n:::\n\n::: bloc_exercice\n::: bloc_exercice-header\n::: bloc_exercice-icon\n:::\n\n**Exercice 2.** Réalisation d'un modèle GWR\n:::\n\n::: bloc_exercice-body\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(spgwr)\nload(\"data/chap07/DonneesLyon.Rdata\")\n# Ajout des coordonnées x et y\nxy <- à compléter\nLyonIris$X <- à compléter\nLyonIris$Y <- à compléter\n# Optimisation du nombre de voisins avec le CV\nformule <- \"PM25 ~ Pct0_14+Pct_65+Pct_Img+Pct_brevet+NivVieMed\"\nbwaCV.voisins  <- gwr.sel(à compléter)\n# Optimisation du nombre de voisins avec l'AIC\nbwaCV.voisins  <- gwr.sel(à compléter)\n# Réalisation de la GWR\nModele.GWR <- gwr(à compléter)\n# Affichage des résultats\nModele.GWR\n```\n:::\n\n\n\n\n\n\nCorrection à la [section @sec-12073].\n:::\n:::\n",
    "supporting": [
      "07-RegressionSpatiales_files\\figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}